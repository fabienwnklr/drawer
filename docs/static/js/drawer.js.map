{"version":3,"file":"drawer.js","sources":["../src/utils/dom.ts","../src/utils/DrawError.ts","../src/constants.ts","../src/utils/DrawEvent.ts","../src/utils/History.ts","../src/icons/triangle.ts","../src/icons/square.ts","../src/icons/line.ts","../src/icons/star.ts","../src/icons/circle.ts","../src/icons/rect.ts","../src/icons/arrow.ts","../src/utils/perf.ts","../src/utils/infos.ts","../src/utils/utils.ts","../node_modules/@melloware/coloris/dist/esm/coloris.js","../src/icons/close.ts","../src/ui/Modal.ts","../src/icons/github.ts","../src/ui/SettingsModal.ts","../src/icons/brush.ts","../src/icons/clear.ts","../src/icons/download.ts","../src/icons/eraser.ts","../src/icons/redo.ts","../src/icons/setting.ts","../src/icons/shape.ts","../src/icons/text.ts","../src/icons/undo.ts","../src/icons/upload.ts","../src/icons/ellipse.ts","../src/icons/expand.ts","../src/icons/fullscreen.ts","../src/ui/Toolbar.ts","../src/Drawer.ts"],"sourcesContent":["export function stringToHTMLElement<T>(string: string): T {\n  return new DOMParser().parseFromString(string, 'text/html').body.firstChild as T;\n}\n\nexport function getScrollbarWidth(): number {\n  return window.innerWidth - document.documentElement.clientWidth;\n}\n","export class DrawerError extends Error {\r\n  constructor(msg: string) {\r\n    super(msg);\r\n\r\n    this.name = `DrawerError`;\r\n  }\r\n}\r\n","import type { DrawerOptions, ModalOptions, ToolbarOptions } from './types/index';\n\n/**\n * @private\n */\nexport const defaultOptionsDrawer: DrawerOptions = {\n  id: Date.now().toString(), // id for drawer\n  defaultToolbar: true, // add toolbar with default boutons\n  width: 400, // width of canvas container\n  height: 400, // height of canvas container\n  canvasWidth: window.innerWidth * 1.5, // canvas width\n  canvasHeight: window.innerHeight * 1.5, // canvas height\n  localStorageKey: 'draw', // local storage key for save\n  autoSave: true, // save on change in localStorage\n  toolbarPosition: 'outerTop', // can be 'outerTop', 'outerEnd', 'outerBottom', 'outerStart', 'innerTop', 'innerEnd', 'innerBottom', 'innerStart'\n  bgColor: '#fff', // can be format hex, rgba, rgba, hlsa\n  color: '#000', // can be format hex, rgba, rgba, hlsa\n  lineThickness: 3, // Line thickness\n  dotted: false, // active line dotted\n  dash: [10, 5], // if dotted true\n  cap: 'round', // \"butt\" | \"round\" | \"square\"\n  fill: true, // fill draw\n  availableColor: [], // for input color\n  availableColorOnly: false, // show color only into colorpicker popover\n  grid: false, // show css grid for draw helping\n  guides: false, // show guide when drawing\n  opacity: 1, // global opacity of draw\n  xor: false, // active xor\n  tool: 'brush', // default tool on init\n  eraserThickness: 15, // eraser width\n  minEraserThickness: 15, // min eraser width\n};\n\n/**\n * @private\n */\nexport const defaultOptionsModal: ModalOptions = {\n  id: Date.now().toString(),\n  headerContent: undefined,\n  bodyContent: undefined,\n  footerContent: undefined,\n  closeOnClickOutside: false,\n  backdrop: true,\n};\n\n/**\n * @private\n */\nexport const defaultOptionsToolbar: ToolbarOptions = {\n  toolbarPosition: 'outerTop',\n};\n","export const DrawEvent = (name: string, detail: unknown = '') => new CustomEvent('drawer.' + name, { detail });\n","import { DrawerError } from './DrawError';\n\nexport class History {\n  redo_list: string[] = [];\n  undo_list: string[] = [];\n  $canvas!: HTMLCanvasElement;\n  ctx!: CanvasRenderingContext2D;\n\n  saveState(list?: string[], keep_redo?: boolean) {\n    keep_redo = keep_redo ?? false;\n    if (!keep_redo) {\n      this.redo_list = [];\n    }\n\n    (list ?? this.undo_list).push(this.$canvas.toDataURL());\n  }\n\n  undo() {\n    return new Promise((resolve, reject) => {\n      try {\n        this.restoreState(this.undo_list, this.redo_list, resolve);\n      } catch (error: any) {\n        reject(new DrawerError(error.message));\n      }\n    });\n  }\n\n  redo() {\n    return new Promise((resolve, reject) => {\n      try {\n        this.restoreState(this.redo_list, this.undo_list, resolve);\n      } catch (error: any) {\n        reject(new DrawerError(error.message));\n      }\n    });\n  }\n\n  restoreState(pop: string[], push: string[], cb?: (v: boolean) => void) {\n    if (pop.length) {\n      this.saveState(push, true);\n      const restore_state = pop.pop();\n\n      if (restore_state) {\n        const img = document.createElement('img');\n        img.src = restore_state;\n        img.onload = () => {\n          this.ctx.clearRect(0, 0, this.$canvas.width, this.$canvas.height);\n          this.ctx.drawImage(\n            img,\n            0,\n            0,\n            this.$canvas.width,\n            this.$canvas.height,\n            0,\n            0,\n            this.$canvas.width,\n            this.$canvas.height\n          );\n\n          if (typeof cb === 'function') cb(true);\n        };\n      }\n    }\n  }\n\n  setCanvas($canvas: HTMLCanvasElement) {\n    this.$canvas = $canvas;\n    this.ctx = $canvas.getContext('2d') as CanvasRenderingContext2D;\n  }\n}\n","export const TriangleIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M236.8 188.09L149.35 36.22a24.76 24.76 0 0 0-42.7 0L19.2 188.09a23.51 23.51 0 0 0 0 23.72A24.34 24.34 0 0 0 40.55 224h174.9a24.34 24.34 0 0 0 21.33-12.19a23.51 23.51 0 0 0 .02-23.72Zm-13.87 15.71a8.5 8.5 0 0 1-7.48 4.2H40.55a8.5 8.5 0 0 1-7.48-4.2a7.59 7.59 0 0 1 0-7.72l87.45-151.87a8.75 8.75 0 0 1 15 0l87.45 151.87a7.59 7.59 0 0 1-.04 7.72Z\"/>\n</svg>`;\n","export const SquareIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M17 2H7a5 5 0 0 0-5 5v10a5 5 0 0 0 5 5h10a5 5 0 0 0 5-5V7a5 5 0 0 0-5-5Zm3 15a3 3 0 0 1-3 3H7a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h10a3 3 0 0 1 3 3Z\"/>\n</svg>`;\n","export const LineIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M1 10a1 1 0 0 1 1-1h16a1 1 0 1 1 0 2H2a1 1 0 0 1-1-1Z\" clip-rule=\"evenodd\"/>\n</svg>`;\n","export const StarIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M239.2 97.29a16 16 0 0 0-13.81-11L166 81.17l-23.28-55.36a15.95 15.95 0 0 0-29.44 0L90.07 81.17l-59.46 5.15a16 16 0 0 0-9.11 28.06l45.11 39.42l-13.52 58.54a16 16 0 0 0 23.84 17.34l51-31l51.11 31a16 16 0 0 0 23.84-17.34l-13.51-58.6l45.1-39.36a16 16 0 0 0 4.73-17.09Zm-15.22 5l-45.1 39.36a16 16 0 0 0-5.08 15.71L187.35 216l-51.07-31a15.9 15.9 0 0 0-16.54 0l-51 31l13.46-58.6a16 16 0 0 0-5.08-15.71L32 102.35a.37.37 0 0 1 0-.09l59.44-5.14a16 16 0 0 0 13.35-9.75L128 32.08l23.2 55.29a16 16 0 0 0 13.35 9.75l59.45 5.14v.07Z\"/>\n</svg>`;\n","export const CircleIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88a88.1 88.1 0 0 1-88 88Z\"/>\n</svg>`;\n","export const RectIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16Zm0 160H40V56h176v144Z\"/>\n</svg>`;\n","export const ArrowIcon = `<svg style=\"transform: rotate(135deg);\" width=\"16\" height=\"16\" viewBox=\"0 0 15 15\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M4.5 0h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 0 .854.354L2.5 3.207l11.646 11.647l.708-.708L3.207 2.5L4.854.854A.5.5 0 0 0 4.5 0Z\"/>\n</svg>`;\n","import type { ThrottledFunction } from '../types/index';\n\n/**\n * permet de déclencher l'appel à une fonction après un certain délai (un peu comme la fonction setTimeout())\n * mais permet en plus de réinitialiser le timer si on demande une nouvelle exécution dans un intervalle de temps plus court que le délai\n *\n * @param {Function} callback Fonction à appeler\n * @param {Number} delay Timeout avant éxécution de la méthode\n * @returns {Function}\n *\n * @example\n * // Define the function that updates the layout\n * function updateLayout() {\n * // Update the layout...\n * }\n * // Create a debounced version of the function\n * const debouncedUpdateLayout = debounce(updateLayout, 250);\n *\n * // Listen for window resize events and call the debounced function\n * window.addEventListener(\"resize\", debouncedUpdateLayout);\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  callback: T,\n  delay: number = 300\n): (...args: Parameters<T>) => void {\n  let timer: ReturnType<typeof setTimeout> | undefined;\n  return function (...args: Parameters<T>[]) {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(function () {\n      callback(...args);\n    }, delay);\n  };\n}\n\n/**\n * La fonction throttle permet d'éviter des appels consécutifs en introduisant un délai.\n * Elle servira surtout lorsque l'on écoutera des évènements pouvant se produire un très\n * grand nombre de fois dans un intervalle de temps très court (scroll, resize, mouseMove...).\n *\n * @param {Function} fn Fonction à appeler\n * @param {Number} wait Délai avant de relancer la fonction\n * @returns {Function}\n *\n * @example\n * // Define the function that updates the layout\n * function updateLayout() {\n *   // Update the layout...\n * }\n *\n * // Create a throttled version of the function\n * const throttledUpdateLayout = throttle(updateLayout, 250);\n *\n * // Listen for window scroll events and call the throttled function\n * window.addEventListener(\"scroll\", throttledUpdateLayout);\n */\nexport function throttle<T extends (...args: any) => any>(func: T, limit: number = 100): ThrottledFunction<T> {\n  let inThrottle: boolean;\n  let lastResult: ReturnType<T>;\n\n  return function (this: any, ...args): ReturnType<T> {\n    if (!inThrottle) {\n      inThrottle = true;\n\n      setTimeout(() => (inThrottle = false), limit);\n\n      lastResult = func.apply(this, args);\n    }\n\n    return lastResult;\n  };\n}\n\n/**\n * Measure time executing function\n * @param func\n * @param label\n * @returns\n */\nexport function measureTime<T extends (...args: any[]) => any>(func: T, label: string) {\n  if (typeof func !== 'function') {\n    console.error(`func must be a valid function, ${typeof func} provided`);\n    return;\n  }\n  console.time(label);\n  func();\n  console.timeEnd(label);\n}\n","/**\n * Check if is tactil\n */\nexport function isTactil(): boolean {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n}\n\n/**\n * returns the xy point where the mouse event was occured inside an element.\n * @param {HTMLElement} $canvas\n * @param {PointerEvent} evt\n */\nexport function getMousePosition($canvas: HTMLElement | SVGElement, evt: PointerEvent): { x: number; y: number } {\n  const rect = $canvas.getBoundingClientRect();\n\n  return {\n    x: evt.clientX - rect.left,\n    y: evt.clientY - rect.top,\n  };\n}\n","/**\n * Convert hex to rgba\n * @param hexCode\n * @param opacity\n * @returns\n */\nexport function hexToRgbA(hexCode: string, opacity = 1): string {\n  let hex = hexCode.replace('#', '');\n\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  /* Backward compatibility for whole number based opacity values. */\n  if (opacity > 1 && opacity <= 100) {\n    opacity = opacity / 100;\n  }\n\n  return `rgba(${r},${g},${b},${opacity})`;\n}\n\ntype IIsObject = (item: any) => boolean;\n\n/**\n * @description Method to check if an item is an object. Date and Function are considered\n * an object, so if you need to exclude those, please update the method accordingly.\n * @param item - The item that needs to be checked\n * @return {Boolean} Whether or not @item is an object\n */\nexport const isObject: IIsObject = (item: any): boolean => {\n  return item === Object(item) && !Array.isArray(item);\n};\n\nexport function isTruthy(t: any): boolean {\n  return typeof t !== 'undefined' && t !== '' && t !== null;\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T> | T): T {\n  if (!source) return target;\n  const output = { ...target };\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (isObject(source[key as keyof T])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key as keyof T] });\n        } else {\n          output[key as keyof object] = deepMerge(target[key as keyof object], source[key as keyof object]);\n        }\n      } else if (isTruthy(source[key as keyof T])) {\n        Object.assign(output, { [key]: source[key as keyof T] });\n      }\n    });\n  }\n  return output;\n}\n\nexport function arrayBufferToBase64(buffer: ArrayBuffer): string {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return window.btoa(binary);\n}\n\nexport async function blobToBase64(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      let data = reader.result;\n      if (data instanceof ArrayBuffer) {\n        data = arrayBufferToBase64(data);\n      } else if (data === null) {\n        data = '';\n      }\n      resolve(data);\n    };\n    reader.onerror = (err) => reject(err);\n    reader.readAsDataURL(blob);\n  });\n}\n","var Coloris = function () {\n  /*!\r\n  * Copyright (c) 2021-2023 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.21.1\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return function (window, document, Math, undefined) {\n    var ctx = document.createElement('canvas').getContext('2d');\n    var currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    var container,picker,colorArea,colorMarker,colorPreview,colorValue,clearButton,closeButton,\n      hueSlider,hueMarker,alphaSlider,alphaMarker,currentEl,currentFormat,oldColor,keyboardNav,\n      colorAreaDims = {};\n\n    // Default settings\n    var settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: function onChange() {return undefined;},\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    var instances = {};\n    var currentInstanceId = '';\n    var defaultInstance = {};\n    var hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }var _loop = function _loop()\n\n      {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = undefined;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = \"clr-picker clr-\" + settings.theme + \" clr-\" + settings.themeMode;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            document.querySelectorAll('.clr-field').forEach(function (field) {return field.classList.toggle('clr-rtl', settings.rtl);});\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              var swatches = [];\n\n              options.swatches.forEach(function (swatch, i) {\n                swatches.push(\"<button type=\\\"button\\\" id=\\\"clr-swatch-\" + i + \"\\\" aria-labelledby=\\\"clr-swatch-label clr-swatch-\" + i + \"\\\" style=\\\"color: \" + swatch + \";\\\">\" + swatch + \"</button>\");\n              });\n\n              getEl('clr-swatches').innerHTML = swatches.length ? \"<div>\" + swatches.join('') + \"</div>\" : '';\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              var defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            var labels = options.a11y;\n            var update = false;\n\n            if (typeof labels === 'object') {\n              for (var label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              var openLabel = getEl('clr-open-label');\n              var swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];\n        }\n      };for (var key in options) {_loop();}\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        var unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];var _loop2 = function _loop2()\n\n        {\n          var options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach(function (option) {return delete options[option];});\n\n            // Back up the default options so we can restore them later\n            for (var option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);return \"break\";\n\n          }\n        };for (var selector in instances) {var _ret = _loop2();if (_ret === \"break\") break;}\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function bindFields(selector) {\n      // Show the color picker on click on the input fields that match the selector\n      addListener(document, 'click', selector, function (event) {\n        // Skip if inline mode is in use\n        if (settings.inline) {\n          return;\n        }\n\n        // Apply any per-instance options first\n        attachVirtualInstance(event.target);\n\n        currentEl = event.target;\n        oldColor = currentEl.value;\n        currentFormat = getColorFormatFromStr(oldColor);\n        picker.classList.add('clr-open');\n\n        updatePickerPosition();\n        setColorFromStr(oldColor);\n\n        if (settings.focusInput || settings.selectInput) {\n          colorValue.focus({ preventScroll: true });\n          colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n        }\n\n        if (settings.selectInput) {\n          colorValue.select();\n        }\n\n        // Always focus the first element when using keyboard navigation\n        if (keyboardNav || settings.swatchesOnly) {\n          getFocusableElements().shift().focus();\n        }\n\n        // Trigger an \"open\" event\n        currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n      });\n\n      // Update the color preview of the input fields that match the selector\n      addListener(document, 'input', selector, function (event) {\n        var parent = event.target.parentNode;\n\n        // Only update the preview if the field has been previously wrapped\n        if (parent.classList.contains('clr-field')) {\n          parent.style.color = event.target.value;\n        }\n      });\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      var parent = container;\n      var scrollY = window.scrollY;\n      var pickerWidth = picker.offsetWidth;\n      var pickerHeight = picker.offsetHeight;\n      var reposition = { left: false, top: false };\n      var parentStyle, parentMarginTop, parentBorderTop;\n      var offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        var coords = currentEl.getBoundingClientRect();\n        var left = coords.x;\n        var top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = left + \"px\";\n        picker.style.top = top + \"px\";\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function wrapFields(selector) {\n      document.querySelectorAll(selector).forEach(function (field) {\n        var parentNode = field.parentNode;\n\n        if (!parentNode.classList.contains('clr-field')) {\n          var wrapper = document.createElement('div');\n          var classes = 'clr-field';\n\n          if (settings.rtl || field.classList.contains('clr-rtl')) {\n            classes += ' clr-rtl';\n          }\n\n          wrapper.innerHTML = \"<button type=\\\"button\\\" aria-labelledby=\\\"clr-open-label\\\"></button>\";\n          parentNode.insertBefore(wrapper, field);\n          wrapper.setAttribute('class', classes);\n          wrapper.style.color = field.value;\n          wrapper.appendChild(field);\n        }\n      });\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        var prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = undefined;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(function () {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = undefined;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      var rgba = strToRGBA(str);\n      var hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = \"hsl(\" + hsva.h + \", 100%, 50%)\";\n      hueMarker.style.left = hsva.h / 360 * 100 + \"%\";\n\n      colorMarker.style.left = colorAreaDims.width * hsva.s / 100 + \"px\";\n      colorMarker.style.top = colorAreaDims.height - colorAreaDims.height * hsva.v / 100 + \"px\";\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = hsva.a * 100 + \"%\";\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      var format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color, currentEl);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color: color, currentEl: currentEl } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      var hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      var rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      var label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      var pointer = getPointerPosition(event);\n      var x = pointer.pageX - colorAreaDims.x;\n      var y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      var x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      var y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = x + \"px\";\n      colorMarker.style.top = y + \"px\";\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      var format = settings.format;\n\n      for (var key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (var _key in hsva) {\n        currentColor[_key] = hsva[_key];\n      }\n\n      var hex = RGBAToHex(currentColor);\n      var opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;\n      }\n\n      // Select the current format in the format switcher\n      document.querySelector(\".clr-format [value=\\\"\" + format + \"\\\"]\").checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      var hue = hueSlider.value * 1;\n      var x = colorMarker.style.left.replace('px', '') * 1;\n      var y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = \"hsl(\" + hue + \", 100%, 50%)\";\n      hueMarker.style.left = hue / 360 * 100 + \"%\";\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      var alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = alpha * 100 + \"%\";\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      var saturation = hsva.s / 100;\n      var value = hsva.v / 100;\n      var chroma = saturation * value;\n      var hueBy60 = hsva.h / 60;\n      var x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      var m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      var index = Math.floor(hueBy60) % 6;\n      var red = [chroma, x, m, m, x, chroma][index];\n      var green = [x, chroma, chroma, x, m, m][index];\n      var blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      var value = hsva.v / 100;\n      var lightness = value * (1 - hsva.s / 100 / 2);\n      var saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      var red = rgba.r / 255;\n      var green = rgba.g / 255;\n      var blue = rgba.b / 255;\n      var xmax = Math.max(red, green, blue);\n      var xmin = Math.min(red, green, blue);\n      var chroma = xmax - xmin;\n      var value = xmax;\n      var hue = 0;\n      var saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      var regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      var match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n        // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n        rgba.a = +rgba.a.toFixed(2);\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map(function (h) {return parseInt(h, 16);});\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      var R = rgba.r.toString(16);\n      var G = rgba.g.toString(16);\n      var B = rgba.b.toString(16);\n      var A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        var alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return \"rgb(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \")\";\n      } else {\n        return \"rgba(\" + rgba.r + \", \" + rgba.g + \", \" + rgba.b + \", \" + rgba.a + \")\";\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return \"hsl(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%)\";\n      } else {\n        return \"hsla(\" + hsla.h + \", \" + hsla.s + \"%, \" + hsla.l + \"%, \" + hsla.a + \")\";\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = undefined;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      \"<input id=\\\"clr-color-value\\\" name=\\\"clr-color-value\\\" class=\\\"clr-color\\\" type=\\\"text\\\" value=\\\"\\\" spellcheck=\\\"false\\\" aria-label=\\\"\" + settings.a11y.input + \"\\\">\" + (\"<div id=\\\"clr-color-area\\\" class=\\\"clr-gradient\\\" role=\\\"application\\\" aria-label=\\\"\" +\n      settings.a11y.instruction + \"\\\">\") +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' + (\"<input id=\\\"clr-hue-slider\\\" name=\\\"clr-hue-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"360\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.hueSlider + \"\\\">\") +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' + (\"<input id=\\\"clr-alpha-slider\\\" name=\\\"clr-alpha-slider\\\" type=\\\"range\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"1\\\" aria-label=\\\"\" +\n      settings.a11y.alphaSlider + \"\\\">\") +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' + (\"<legend>\" +\n      settings.a11y.format + \"</legend>\") +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' + (\"<button type=\\\"button\\\" id=\\\"clr-clear\\\" class=\\\"clr-clear\\\" aria-label=\\\"\" +\n      settings.a11y.clear + \"\\\">\" + settings.clearLabel + \"</button>\") +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' + (\"<button type=\\\"button\\\" id=\\\"clr-close\\\" class=\\\"clr-close\\\" aria-label=\\\"\" +\n      settings.a11y.close + \"\\\">\" + settings.closeLabel + \"</button>\") +\n      '</div>' + (\"<span id=\\\"clr-open-label\\\" hidden>\" +\n      settings.a11y.open + \"</span>\") + (\"<span id=\\\"clr-swatch-label\\\" hidden>\" +\n      settings.a11y.swatch + \"</span>\");\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', function (event) {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', function (event) {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', function (event) {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', function (event) {\n        var value = colorValue.value;\n\n        if (currentEl || settings.inline) {\n          var color = value === '' ? value : setColorFromStr(value);\n          pickColor(color);\n        }\n      });\n\n      addListener(clearButton, 'click', function (event) {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', function (event) {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(getEl('clr-format'), 'click', '.clr-format input', function (event) {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', function (event) {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', function (event) {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', function (event) {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', function (event) {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', function (event) {\n        var key = event.key;\n        var target = event.target;\n        var shiftKey = event.shiftKey;\n        var navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          var focusables = getFocusableElements();\n          var firstFocusable = focusables.shift();\n          var lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', function (event) {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', function (event) {\n        var movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown.apply(void 0, movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      var controls = Array.from(picker.querySelectorAll('input, button'));\n      var focusables = controls.filter(function (node) {return !!node.offsetWidth;});\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, function (event) {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn.apply(void 0, args);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          fn.apply(void 0, args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    var Coloris = function () {\n      var methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition\n      };\n\n      function Coloris(options) {\n        DOMReady(function () {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }var _loop3 = function _loop3(key)\n\n      {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {args[_key2] = arguments[_key2];}\n          DOMReady(methods[key], args);\n        };\n      };for (var key in methods) {_loop3(key);}\n\n      // handle window resize events re-aligning the panel\n      DOMReady(function () {\n        window.addEventListener('resize', function (event) {Coloris.updatePosition();});\n        window.addEventListener('scroll', function (event) {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    }();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  }(window, document, Math);\n}();\n\nvar _coloris = Coloris.coloris;\nvar _init = Coloris.init;\nvar _set = Coloris.set;\nvar _wrap = Coloris.wrap;\nvar _close = Coloris.close;\nvar _setInstance = Coloris.setInstance;\nvar _removeInstance = Coloris.removeInstance;\nvar _updatePosition = Coloris.updatePosition;\nexport default Coloris;\nexport {\n  _coloris as coloris,\n  _close as close,\n  _init as init,\n  _set as set,\n  _wrap as wrap,\n  _setInstance as setInstance,\n  _removeInstance as removeInstance,\n  _updatePosition as updatePosition };","export const CloseIcon = IconClose();\n\nexport function IconClose(w = 16, h= 16) {\n    return `<svg width=\"${w}\" height=\"${h}\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m21 21l-9-9m0 0L3 3m9 9l9-9m-9 9l-9 9\"/>\n</svg>`\n}\n","import '../css/modal.css';\r\nimport { DrawerError } from '../utils/DrawError';\r\nimport { defaultOptionsModal } from '../constants';\r\nimport { stringToHTMLElement } from '../utils/dom';\r\nimport type { Drawer } from '../Drawer';\r\nimport type { ModalOptions } from '../types/index';\r\nimport { CloseIcon } from '../icons/close';\r\n\r\ndeclare global {\r\n  interface HTMLDivElement {\r\n    modal: Modal;\r\n  }\r\n}\r\n\r\nexport class Modal {\r\n  $modal!: HTMLDivElement;\r\n  $modalHeader!: HTMLDivElement;\r\n  $modalBody!: HTMLDivElement;\r\n  $modalFooter!: HTMLDivElement;\r\n  options: ModalOptions;\r\n  drawer: Drawer;\r\n  $backdrop!: HTMLDivElement;\r\n\r\n  constructor(drawer: Drawer, options?: Partial<ModalOptions>) {\r\n    try {\r\n      this.drawer = drawer;\r\n      this.options = { ...defaultOptionsModal, ...options };\r\n      this._init();\r\n      this._setupDefaultEvents();\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  private _init() {\r\n    this._createModal();\r\n    this.setHeaderContent(\r\n      this.options.headerContent ??\r\n        `<h2 class=\"drawer-modal-title\">${this.options.title ?? \"Modal\"}</h2><button title=\"Close\" class=\"btn-close\" data-modal=\"close\">${CloseIcon}</button>`\r\n    );\r\n    this.setBodyContent(this.options.bodyContent ?? '');\r\n    this.setFooterContent(this.options.footerContent ?? '');\r\n  }\r\n\r\n  private _setupDefaultEvents() {\r\n    const $closeBtn = this.$modalHeader.querySelector('[data-modal=close]');\r\n\r\n    if ($closeBtn) {\r\n      $closeBtn.addEventListener('click', () => {\r\n        this.hide();\r\n      });\r\n    }\r\n\r\n    // Close modal when clickin outside\r\n    if (this.options.closeOnClickOutside) {\r\n      document.addEventListener(\r\n        'click',\r\n        (event) => {\r\n          if (event.target) {\r\n            const outsideClick =\r\n              !this.drawer.toolbar?.$settingBtn?.contains(event.target as Node) &&\r\n              !this.$modal.contains(event.target as Node);\r\n\r\n            if (outsideClick) {\r\n              this.hide();\r\n            }\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n  }\r\n\r\n  private _createModal() {\r\n    this.$modal = stringToHTMLElement<HTMLDivElement>(/*html*/ `\r\n    <div class=\"drawer-modal\"></div>`);\r\n    this.$modalHeader = stringToHTMLElement<HTMLDivElement>(/*html*/ `\r\n      <div class=\"drawer-modal-header\"></div>`);\r\n    this.$modalBody = stringToHTMLElement<HTMLDivElement>(/*html*/ `\r\n      <div class=\"drawer-modal-body\"></div>`);\r\n    this.$modalFooter = stringToHTMLElement<HTMLDivElement>(/*html*/ `\r\n      <div class=\"drawer-modal-footer\"></div>`);\r\n\r\n    this.$modal.modal = this;\r\n\r\n    this.$modal.append(...[this.$modalHeader, this.$modalBody, this.$modalFooter]);\r\n\r\n    if (this.options.backdrop) {\r\n      this.$backdrop = stringToHTMLElement<HTMLDivElement>(/*html*/ `\r\n      <div class=\"backdrop\"></div>\r\n      `);\r\n      this.$backdrop.append(this.$modal);\r\n\r\n      this.drawer.$drawerContainer.append(this.$backdrop);\r\n    } else {\r\n      this.drawer.$drawerContainer.append(this.$modal);\r\n    }\r\n  }\r\n\r\n  setHeaderContent(content: string) {\r\n    if (content) {\r\n      this.$modalHeader.innerHTML = content;\r\n    }\r\n  }\r\n\r\n  setBodyContent(content: string) {\r\n    this.$modalBody.innerHTML = content;\r\n  }\r\n\r\n  appendBodyContent(content: string) {\r\n    this.$modalBody.append(content);\r\n  }\r\n\r\n  setFooterContent(content: string) {\r\n    this.$modalFooter.innerHTML = content;\r\n  }\r\n\r\n  show() {\r\n    if (this.$backdrop) {\r\n      this.$backdrop.classList.add('show');\r\n    }\r\n    this.$modal.classList.add('show');\r\n  }\r\n\r\n  hide() {\r\n    if (this.$backdrop) {\r\n      this.$backdrop.classList.remove('show');\r\n    }\r\n    this.$modal.classList.remove('show');\r\n  }\r\n\r\n  isVisible(): boolean {\r\n    return this.$modal.classList.contains('show');\r\n  }\r\n\r\n  destroy() {\r\n    this.hide();\r\n    this.$modal.remove();\r\n  }\r\n}\r\n","export const GithubIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M12 2.247a10 10 0 0 0-3.162 19.487c.5.088.687-.212.687-.475c0-.237-.012-1.025-.012-1.862c-2.513.462-3.163-.613-3.363-1.175a3.636 3.636 0 0 0-1.025-1.413c-.35-.187-.85-.65-.013-.662a2.001 2.001 0 0 1 1.538 1.025a2.137 2.137 0 0 0 2.912.825a2.104 2.104 0 0 1 .638-1.338c-2.225-.25-4.55-1.112-4.55-4.937a3.892 3.892 0 0 1 1.025-2.688a3.594 3.594 0 0 1 .1-2.65s.837-.262 2.75 1.025a9.427 9.427 0 0 1 5 0c1.912-1.3 2.75-1.025 2.75-1.025a3.593 3.593 0 0 1 .1 2.65a3.869 3.869 0 0 1 1.025 2.688c0 3.837-2.338 4.687-4.563 4.937a2.368 2.368 0 0 1 .675 1.85c0 1.338-.012 2.413-.012 2.75c0 .263.187.575.687.475A10.005 10.005 0 0 0 12 2.247Z\"/>\n</svg>`\n","import Coloris from '@melloware/coloris';\nimport type { Drawer } from '../Drawer';\nimport { Modal } from './Modal';\nimport { GithubIcon } from '../icons/github';\n\nexport class SettingsModal extends Modal {\n  filled: boolean;\n  grid: boolean;\n  guides: boolean;\n  opacity: number;\n  xor: boolean;\n  bgColor: string;\n\n  drawer: Drawer;\n  $fillSettingInput!: HTMLInputElement;\n  $gridSettingInput!: HTMLInputElement;\n  $guidesSettingInput!: HTMLInputElement;\n  $opacitySettingInput!: HTMLInputElement;\n  $xorSettingInput!: HTMLInputElement;\n  $bgCologSettingInput!: HTMLInputElement;\n\n  constructor(drawer: Drawer) {\n    super(drawer, { title: 'Settings' });\n    this.drawer = drawer;\n    this.filled = drawer.options.fill;\n    this.grid = drawer.options.grid;\n    this.guides = drawer.options.guides;\n    this.opacity = drawer.options.opacity;\n    this.xor = drawer.options.xor;\n    this.bgColor = drawer.options.bgColor;\n    this.fill();\n    this._setupSelectors();\n    this._initEvents();\n  }\n\n  /**\n   * Fill the content modal\n   */\n  fill() {\n    this.setBodyContent(/*html*/ `\n      <ul class=\"drawer-modal-body-list\">\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-bgcolor-${this.drawer.options.id}\">Background color</label>\n          <input tabindex=\"-1\" class=\"btn\" id=\"setting-bgcolor-${this.drawer.options.id}\"  name=\"bgcolor-${\n            this.drawer.options.id\n          }\" type=\"texr\" data-coloris value=\"${this.bgColor}\"/>\n        </li>\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-opacity-${this.drawer.options.id}\">Global opacity (0.1 / 1)</label>\n          <input id=\"setting-opacity-${this.drawer.options.id}\"  name=\"opacity-${\n            this.drawer.options.id\n          }\" type=\"number\" min=\"0.1\" max=\"1\" step=\"0.1\" value=\"${this.opacity}\"/>\n        </li>\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-fill-${this.drawer.options.id}\">Fill</label>\n          <input id=\"setting-fill-${this.drawer.options.id}\" type=\"checkbox\" name=\"fill-${this.drawer.options.id}\" ${\n            this.filled ? 'checked' : ''\n          }>\n        </li>\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-grid-${this.drawer.options.id}\">Grid (css only)</label>\n          <input id=\"setting-grid-${this.drawer.options.id}\" type=\"checkbox\" name=\"grid-${this.drawer.options.id}\" ${\n            this.grid ? 'checked' : ''\n          }>\n        </li>\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-guides-${this.drawer.options.id}\">Guides (shape's only)</label>\n          <input id=\"setting-guides-${this.drawer.options.id}\" type=\"checkbox\" name=\"guides-${\n            this.drawer.options.id\n          }\" ${this.guides ? 'checked' : ''}>\n        </li>\n        <li class=\"drawer-modal-body-list-item\">\n          <label for=\"setting-xor-${\n            this.drawer.options.id\n          }\">XOR (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\" target=\"_blank\" />example</a>)</label>\n          <input id=\"setting-xor-${this.drawer.options.id}\" type=\"checkbox\" name=\"xor-${this.drawer.options.id}\" ${\n            this.xor ? 'checked' : ''\n          }>\n        </li>\n      </ul>\n    `);\n\n    this.setFooterContent(\n      /*html*/ `<div class=\"drawer-modal-footer\"><small>Version ${this.drawer.VERSION}</small><a class=\"link\" target=\"_blank\" title=\"Visit code source\" href=\"https://github.com/fabwcie/drawer\">${GithubIcon}</a></div>`\n    );\n\n    // Init input color\n    Coloris.init();\n    Coloris({\n      el: `#setting-bgcolor-${this.drawer.options.id}`,\n      theme: 'polaroid',\n      swatches: this.drawer.options.availableColor,\n      swatchesOnly: this.drawer.options.availableColorOnly,\n      formatToggle: !this.drawer.options.availableColorOnly,\n      closeButton: true,\n      closeLabel: 'Validate'\n    });\n  }\n\n  private _setupSelectors() {\n    this.$bgCologSettingInput = this.$modalBody.querySelector(\n      `#setting-bgcolor-${this.drawer.options.id}`\n    ) as HTMLInputElement;\n\n    this.$fillSettingInput = this.$modalBody.querySelector(\n      `#setting-fill-${this.drawer.options.id}`\n    ) as HTMLInputElement;\n\n    this.$gridSettingInput = this.$modalBody.querySelector(\n      `#setting-grid-${this.drawer.options.id}`\n    ) as HTMLInputElement;\n\n    this.$guidesSettingInput = this.$modalBody.querySelector(\n      `#setting-guides-${this.drawer.options.id}`\n    ) as HTMLInputElement;\n\n    this.$opacitySettingInput = this.$modalBody.querySelector(\n      `#setting-opacity-${this.drawer.options.id}`\n    ) as HTMLInputElement;\n\n    this.$xorSettingInput = this.$modalBody.querySelector(`#setting-xor-${this.drawer.options.id}`) as HTMLInputElement;\n  }\n\n  private _initEvents() {\n    this.$bgCologSettingInput.addEventListener('change', () => {\n      this.drawer.setBgColor(this.$bgCologSettingInput.value);\n    });\n\n    this.$fillSettingInput.addEventListener('change', () => {\n      this.drawer.options.fill = this.$fillSettingInput.checked;\n    });\n\n    this.$gridSettingInput.addEventListener('change', () => {\n      if (this.$gridSettingInput.checked) {\n        this.drawer.addGrid();\n      } else {\n        this.drawer.removeGrid();\n      }\n    });\n\n    this.$guidesSettingInput.addEventListener('change', () => {\n      this.drawer.options.guides = this.$guidesSettingInput.checked;\n    });\n\n    this.$opacitySettingInput.addEventListener('change', () => {\n      const opacity = Number(this.$opacitySettingInput.value);\n\n      if (opacity < 0 || opacity > 1) {\n        this.$opacitySettingInput.value = this.drawer.options.opacity.toString();\n\n        return;\n      }\n      this.drawer.options.opacity = opacity;\n      this.drawer.ctx.globalAlpha = opacity;\n    });\n\n    this.$xorSettingInput.addEventListener('change', () => {\n      this.xor = this.$xorSettingInput.checked;\n      this.drawer.options.xor = this.xor;\n      if (this.$xorSettingInput.checked) {\n        this.drawer.ctx.globalCompositeOperation = 'xor';\n      } else {\n        this.drawer.ctx.globalCompositeOperation = 'source-over';\n      }\n    });\n  }\n}\n","export const BrushIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n    stroke-width=\"32\"\n    d=\"M452.37 59.63h0a40.49 40.49 0 0 0-57.26 0L184 294.74c23.08 4.7 46.12 27.29 49.26 49.26l219.11-227.11a40.49 40.49 0 0 0 0-57.26ZM138 336c-29.88 0-54 24.5-54 54.86c0 23.95-20.88 36.57-36 36.57C64.56 449.74 92.82 464 120 464c39.78 0 72-32.73 72-73.14c0-30.36-24.12-54.86-54-54.86Z\" />\n</svg>\n`;\n","export const ClearIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z\"/>\n</svg>`;\n","export const DownloadIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M240 136v64a16 16 0 0 1-16 16H32a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h40a8 8 0 0 1 0 16H32v64h192v-64h-40a8 8 0 0 1 0-16h40a16 16 0 0 1 16 16Zm-117.66-2.34a8 8 0 0 0 11.32 0l48-48a8 8 0 0 0-11.32-11.32L136 108.69V24a8 8 0 0 0-16 0v84.69L85.66 74.34a8 8 0 0 0-11.32 11.32ZM200 168a12 12 0 1 0-12 12a12 12 0 0 0 12-12Z\"/>\n</svg>`;\n","export const EraserIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\"\n    d=\"M225 80.4L183.6 39a24 24 0 0 0-33.94 0L31 157.66a24 24 0 0 0 0 33.94l30.06 30.06a8 8 0 0 0 5.68 2.34H216a8 8 0 0 0 0-16h-84.7l93.7-93.66a24 24 0 0 0 0-33.94ZM108.68 208H70.05l-27.72-27.72a8 8 0 0 1 0-11.31L96 115.31L148.69 168Zm105-105L160 156.69L107.31 104L161 50.34a8 8 0 0 1 11.32 0l41.38 41.38a8 8 0 0 1 0 11.31Z\" />\n</svg>\n`;\n","export const RedoIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M9.9 19q-2.425 0-4.163-1.575T4 13.5q0-2.35 1.738-3.925T9.9 8h6.3l-2.6-2.6L15 4l5 5l-5 5l-1.4-1.4l2.6-2.6H9.9q-1.575 0-2.738 1T6 13.5Q6 15 7.163 16T9.9 17H17v2H9.9Z\"/>\n</svg>`;\n","export const SettingIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M19.9 12.66a1 1 0 0 1 0-1.32l1.28-1.44a1 1 0 0 0 .12-1.17l-2-3.46a1 1 0 0 0-1.07-.48l-1.88.38a1 1 0 0 1-1.15-.66l-.61-1.83a1 1 0 0 0-.95-.68h-4a1 1 0 0 0-1 .68l-.56 1.83a1 1 0 0 1-1.15.66L5 4.79a1 1 0 0 0-1 .48L2 8.73a1 1 0 0 0 .1 1.17l1.27 1.44a1 1 0 0 1 0 1.32L2.1 14.1a1 1 0 0 0-.1 1.17l2 3.46a1 1 0 0 0 1.07.48l1.88-.38a1 1 0 0 1 1.15.66l.61 1.83a1 1 0 0 0 1 .68h4a1 1 0 0 0 .95-.68l.61-1.83a1 1 0 0 1 1.15-.66l1.88.38a1 1 0 0 0 1.07-.48l2-3.46a1 1 0 0 0-.12-1.17ZM18.41 14l.8.9l-1.28 2.22l-1.18-.24a3 3 0 0 0-3.45 2L12.92 20h-2.56L10 18.86a3 3 0 0 0-3.45-2l-1.18.24l-1.3-2.21l.8-.9a3 3 0 0 0 0-4l-.8-.9l1.28-2.2l1.18.24a3 3 0 0 0 3.45-2L10.36 4h2.56l.38 1.14a3 3 0 0 0 3.45 2l1.18-.24l1.28 2.22l-.8.9a3 3 0 0 0 0 3.98Zm-6.77-6a4 4 0 1 0 4 4a4 4 0 0 0-4-4Zm0 6a2 2 0 1 1 2-2a2 2 0 0 1-2 2Z\"/>\n</svg>`;\n","export const ShapeIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M17 15.7V13h2v4l-9 4l-7-7l4-9h4v2H8.3l-2.9 6.6l5 5l6.6-2.9M22 5v2h-3v3h-2V7h-3V5h3V2h2v3h3Z\"/>\n</svg>`;\n","export const TextIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M13 6v15h-2V6H5V4h14v2h-6Z\"/>\n</svg>`;\n","export const UndoIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M7 19v-2h7.1q1.575 0 2.738-1T18 13.5q0-1.5-1.163-2.5T14.1 10H7.8l2.6 2.6L9 14L4 9l5-5l1.4 1.4L7.8 8h6.3q2.425 0 4.163 1.575T20 13.5q0 2.35-1.738 3.925T14.1 19H7Z\"/>\n</svg>`;\n","export const UploadIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 256 256\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M238 136v64a14 14 0 0 1-14 14H32a14 14 0 0 1-14-14v-64a14 14 0 0 1 14-14h48a6 6 0 0 1 0 12H32a2 2 0 0 0-2 2v64a2 2 0 0 0 2 2h192a2 2 0 0 0 2-2v-64a2 2 0 0 0-2-2h-48a6 6 0 0 1 0-12h48a14 14 0 0 1 14 14ZM84.24 76.24L122 38.49V128a6 6 0 0 0 12 0V38.49l37.76 37.75a6 6 0 0 0 8.48-8.48l-48-48a6 6 0 0 0-8.48 0l-48 48a6 6 0 0 0 8.48 8.48ZM198 168a10 10 0 1 0-10 10a10 10 0 0 0 10-10Z\"/>\n</svg>`;\n","export const EllipseIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 2048 2048\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M1024 256q131 0 268 27t264 85t233 144t175 206q41 71 62 147t22 159q0 82-21 158t-63 148q-68 119-174 206t-233 144t-264 84t-269 28q-131 0-268-27t-264-85t-233-144t-175-206q-41-71-62-147T0 1024q0-82 21-158t63-148q68-119 174-206t233-144t264-84t269-28zm0 1408q84 0 169-11t167-36t159-60t146-87q54-40 101-88t81-105t53-120t20-133q0-70-19-133t-54-119t-81-105t-101-89q-68-50-145-86t-160-61t-167-35t-169-12q-84 0-169 11t-167 36t-159 60t-146 87q-54 40-101 88t-81 105t-53 120t-20 133q0 70 19 133t54 119t81 105t101 89q68 50 145 86t160 61t167 35t169 12z\"/>\n</svg>`;\n","export const ExpandIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill=\"currentColor\" d=\"M18 18v2H4a2 2 0 0 1-2-2V8h2v10M22 6v8a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2m-2 0H8v8h12Z\"></path>\n</svg>`;\n","export const FullscreenIcon = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n<g fill=\"none\">\n    <path d=\"M24 0v24H0V0h24ZM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01l-.184-.092Z\"></path>\n    <path fill=\"currentColor\" d=\"M4 15a1 1 0 0 1 1 1v3h3a1 1 0 1 1 0 2H5a2 2 0 0 1-2-2v-3a1 1 0 0 1 1-1Zm16 0a1 1 0 0 1 .993.883L21 16v3a2 2 0 0 1-1.85 1.995L19 21h-3a1 1 0 0 1-.117-1.993L16 19h3v-3a1 1 0 0 1 1-1ZM19 3a2 2 0 0 1 1.995 1.85L21 5v3a1 1 0 0 1-1.993.117L19 8V5h-3a1 1 0 0 1-.117-1.993L16 3h3ZM8 3a1 1 0 0 1 .117 1.993L8 5H5v3a1 1 0 0 1-1.993.117L3 8V5a2 2 0 0 1 1.85-1.995L5 3h3Z\"></path>\n</g>\n</svg>`;\n","// Coloris JS\r\nimport '@melloware/coloris/dist/coloris.css';\r\nimport Coloris from '@melloware/coloris';\r\n\r\nimport { Drawer } from '../Drawer';\r\nimport { ArrowIcon } from '../icons/arrow';\r\nimport { BrushIcon } from '../icons/brush';\r\nimport { CircleIcon } from '../icons/circle';\r\nimport { ClearIcon } from '../icons/clear';\r\nimport { DownloadIcon } from '../icons/download';\r\nimport { EraserIcon } from '../icons/eraser';\r\nimport { LineIcon } from '../icons/line';\r\nimport { RectIcon } from '../icons/rect';\r\nimport { RedoIcon } from '../icons/redo';\r\nimport { SettingIcon } from '../icons/setting';\r\nimport { ShapeIcon } from '../icons/shape';\r\nimport { SquareIcon } from '../icons/square';\r\nimport { TextIcon } from '../icons/text';\r\nimport { TriangleIcon } from '../icons/triangle';\r\nimport { UndoIcon } from '../icons/undo';\r\nimport { UploadIcon } from '../icons/upload';\r\nimport { EllipseIcon } from '../icons/ellipse';\r\nimport { DrawerError } from '../utils/DrawError';\r\nimport { DrawEvent } from '../utils/DrawEvent';\r\nimport { defaultOptionsToolbar } from '../constants';\r\nimport { getScrollbarWidth, stringToHTMLElement } from '../utils/dom';\r\nimport { debounce } from '../utils/perf';\r\nimport { deepMerge } from '../utils/utils';\r\nimport type { action, DrawTools, ToolbarOptions } from '../types/index';\r\nimport { ExpandIcon } from '../icons/expand';\r\nimport { FullscreenIcon } from '../icons/fullscreen';\r\nimport { CloseIcon } from '../icons/close';\r\n\r\nexport class Toolbar {\r\n  drawer: Drawer;\r\n  options: ToolbarOptions;\r\n\r\n  $toolbar!: HTMLDivElement;\r\n  $undoBtn!: HTMLButtonElement | null;\r\n  $redoBtn!: HTMLButtonElement | null;\r\n  $brushBtn!: HTMLButtonElement | null;\r\n  $eraserBtn!: HTMLButtonElement | null;\r\n  $textBtn!: HTMLButtonElement | null;\r\n  $drawGroupBtn!: HTMLButtonElement | null;\r\n  $drawGroupMenu!: HTMLUListElement | null;\r\n  $clearBtn!: HTMLButtonElement | null;\r\n  $lineThickness!: HTMLDivElement | null;\r\n  $downloadBtn!: HTMLButtonElement | null;\r\n  $colorPicker!: HTMLInputElement | null;\r\n  $shapeBtn!: HTMLButtonElement | null;\r\n  $shapeMenu!: HTMLUListElement | null;\r\n  $uploadFile!: HTMLInputElement | null;\r\n  $pickColorBtn!: HTMLButtonElement | null;\r\n  $expandBtn!: HTMLButtonElement | null;\r\n  $fullscreenBtn!: HTMLButtonElement | null;\r\n  $settingBtn!: HTMLButtonElement | null;\r\n  $closeBtn!: HTMLButtonElement | null;\r\n  $colorPickerLabel!: HTMLLabelElement | null;\r\n\r\n  customBtn: { [key: string]: HTMLButtonElement } = {};\r\n\r\n  constructor(drawer: Drawer, options: ToolbarOptions) {\r\n    this.drawer = drawer;\r\n    this.options = deepMerge<ToolbarOptions>(defaultOptionsToolbar, options);\r\n  }\r\n\r\n  /**\r\n   * Adding an empty toolbar element\r\n   * @returns {Promise<HTMLDivElement>} HTML toolbar element\r\n   *\r\n   * @description This method add html toolbar element, is **required** for add any toolbar button\r\n   */\r\n  addToolbar(): Promise<HTMLDivElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (!this.$toolbar) {\r\n          const toolbar = /*html*/ `<div class=\"toolbar ${this.options.toolbarPosition ?? 'outerTop'}\"></div>`;\r\n\r\n          this.$toolbar = stringToHTMLElement<HTMLDivElement>(toolbar);\r\n          this.$toolbar.style.maxWidth = this.drawer.$canvas.width + 'px';\r\n          this.$toolbar.style.maxHeight = this.drawer.$canvas.height + 'px';\r\n\r\n          if (this.options.toolbarPosition === 'outerTop' || this.options.toolbarPosition === 'outerStart') {\r\n            this.drawer.$canvas.before(this.$toolbar);\r\n          } else {\r\n            this.drawer.$drawerContainer.appendChild(this.$toolbar);\r\n          }\r\n\r\n          if (this.options.toolbarPosition === 'outerStart' || this.options.toolbarPosition === 'outerEnd') {\r\n            this.drawer.$drawerContainer.style.display = 'flex';\r\n          }\r\n\r\n          resolve(this.$toolbar);\r\n        } else {\r\n          reject(new DrawerError(`Toolbar already added.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add default button to toolbar,\r\n   * List of defaults buttons :\r\n   * undo, redo, brush, eraser, text, clear, line thickness, colorpicker, upload, download, setting\r\n   */\r\n  addDefaults() {\r\n    this.addUndoBtn();\r\n    this.addRedoBtn();\r\n    this.addBrushBtn();\r\n    this.addEraserBtn();\r\n    this.addClearBtn();\r\n    this.addSeparator();\r\n    this.addSettingBtn();\r\n  }\r\n\r\n  addAllButtons() {\r\n    this.addUndoBtn();\r\n    this.addRedoBtn();\r\n    this.addBrushBtn();\r\n    this.addEraserBtn();\r\n    this.addTextBtn();\r\n    this.addClearBtn();\r\n    this.addShapeBtn();\r\n    this.addLineThicknessBtn();\r\n    this.addColorPickerBtn();\r\n    this.addUploadFileBtn();\r\n    this.addDownloadBtn();\r\n    this.addSettingBtn();\r\n    this.addSeparator();\r\n    this.addExpandButton();\r\n    this.addFullscreenButton();\r\n    this.addCloseButton();\r\n  }\r\n\r\n  /**\r\n   * Add undo button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addUndoBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$undoBtn) {\r\n          const undoBtn = /*html*/ `<button title=\"${'Redo'}\" class=\"btn\" disabled>${UndoIcon}</button>`;\r\n          const $undoBtn = stringToHTMLElement<HTMLButtonElement>(undoBtn);\r\n          this.$undoBtn = $undoBtn;\r\n\r\n          this.$toolbar.appendChild(this.$undoBtn);\r\n\r\n          this.$undoBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $undoBtn);\r\n            } else {\r\n              this.drawer.undo().then(() => {\r\n                this.drawer.$canvas.dispatchEvent(DrawEvent('change', this.drawer.getData()));\r\n              });\r\n              this._manageUndoRedoBtn();\r\n            }\r\n          });\r\n\r\n          resolve(this.$undoBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Undo button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add brush button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addRedoBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$redoBtn) {\r\n          const redoBtn = /*html*/ `<button title=\"${'Redo'}\" class=\"btn\" disabled>${RedoIcon}</button>`;\r\n          const $redoBtn = stringToHTMLElement<HTMLButtonElement>(redoBtn);\r\n          this.$redoBtn = $redoBtn;\r\n\r\n          this.$toolbar.appendChild(this.$redoBtn);\r\n\r\n          this.$redoBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $redoBtn);\r\n            } else {\r\n              this.drawer.redo().then(() => {\r\n                this.drawer.$canvas.dispatchEvent(DrawEvent('change', this.drawer.getData()));\r\n              });\r\n              this._manageUndoRedoBtn();\r\n            }\r\n          });\r\n\r\n          resolve(this.$redoBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Redo button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add brush button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addBrushBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$brushBtn) {\r\n          const brushBtn = /*html*/ `<button title=\"${'Brush'}\" class=\"btn active\">${BrushIcon}</button>`;\r\n          const $brushBtn = stringToHTMLElement<HTMLButtonElement>(brushBtn);\r\n          this.$brushBtn = $brushBtn;\r\n\r\n          this.$toolbar.appendChild(this.$brushBtn);\r\n\r\n          this.$brushBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $brushBtn);\r\n            } else {\r\n              this.drawer.setTool('brush');\r\n            }\r\n          });\r\n\r\n          resolve(this.$brushBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Brush button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add eraser button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addEraserBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$eraserBtn) {\r\n          const eraserBtn = /*html*/ `<button title=\"${'Eraser'}\" class=\"btn\">${EraserIcon}</button>`;\r\n          const $eraserBtn = stringToHTMLElement<HTMLButtonElement>(eraserBtn);\r\n          this.$eraserBtn = $eraserBtn;\r\n\r\n          this.$toolbar.appendChild(this.$eraserBtn);\r\n\r\n          this.$eraserBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $eraserBtn);\r\n            } else {\r\n              this.drawer.setTool('eraser');\r\n            }\r\n          });\r\n\r\n          resolve(this.$eraserBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Eraser button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add text button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addTextBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$textBtn) {\r\n          const textBtn = /*html*/ `<button title=\"${'Text zone'}\" class=\"btn\">${TextIcon}</button>`;\r\n          const $textBtn = stringToHTMLElement<HTMLButtonElement>(textBtn);\r\n          this.$textBtn = $textBtn;\r\n\r\n          this.$toolbar.appendChild(this.$textBtn);\r\n\r\n          this.$textBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $textBtn);\r\n            } else {\r\n              this.drawer.setTool('text');\r\n            }\r\n          });\r\n\r\n          resolve(this.$textBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Text button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add draw group button (contain brush, eraser and text zone)\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addDrawGroupBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$drawGroupBtn && !this.$brushBtn && !this.$eraserBtn && !this.$textBtn) {\r\n          let icon = BrushIcon;\r\n          let title = 'Brush';\r\n\r\n          if (this.drawer.activeTool === 'eraser') {\r\n            icon = EraserIcon;\r\n            title = 'Eraser';\r\n          } else if (this.drawer.activeTool === 'text') {\r\n            icon = TextIcon;\r\n            title = 'Text zone';\r\n          }\r\n\r\n          const active = ['brush', 'eraser', 'text'].includes(this.drawer.activeTool) ? ' active' : '';\r\n          const drawGroupBtn = /*html*/ `<button title=\"${title}\" class=\"btn${active}\">${icon}</button>`;\r\n\r\n          const drawGroupMenu = /*html*/ `\r\n            <ul class=\"drawer-menu\">\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-tool=\"brush\" title=${'Brush'} class=\"btn\">${BrushIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-tool=\"eraser\" title=${'Eraser'} class=\"btn\">${EraserIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-tool=\"text\" title=${'Text zone'} class=\"btn\">${TextIcon}</button>\r\n              </li>\r\n            </ul>`;\r\n\r\n          const $drawGroupBtn = stringToHTMLElement<HTMLButtonElement>(drawGroupBtn);\r\n          const $drawGroupMenu = stringToHTMLElement<HTMLUListElement>(drawGroupMenu);\r\n\r\n          this.$drawGroupBtn = $drawGroupBtn;\r\n          this.$drawGroupMenu = $drawGroupMenu;\r\n\r\n          this.$toolbar.appendChild($drawGroupBtn);\r\n          this.drawer.$drawerContainer.appendChild($drawGroupMenu);\r\n\r\n          $drawGroupBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $drawGroupBtn);\r\n            } else {\r\n              this._toggleMenu($drawGroupBtn, $drawGroupMenu);\r\n            }\r\n          });\r\n\r\n          $drawGroupMenu.querySelectorAll('button').forEach(($btn) => {\r\n            $btn.addEventListener('click', () => {\r\n              const tool = $btn.dataset.tool as keyof typeof DrawTools;\r\n              this.drawer.setTool(tool);\r\n              $drawGroupMenu.classList.remove('show');\r\n            });\r\n          });\r\n\r\n          // Manage click outside menu or button\r\n          this._initClickOutsideMenuEvent($drawGroupBtn, $drawGroupMenu);\r\n\r\n          resolve($drawGroupBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(\r\n            new DrawerError(`A draw button already added, you cannot add it again, please remove add method before.`)\r\n          );\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add clear button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addClearBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$clearBtn) {\r\n          const clearBtn = /*html*/ `<button title=\"${'Clear draw'}\" class=\"btn\">${ClearIcon}</button>`;\r\n          const $clearBtn = stringToHTMLElement<HTMLButtonElement>(clearBtn);\r\n          this.$clearBtn = $clearBtn;\r\n\r\n          this.$toolbar.appendChild(this.$clearBtn);\r\n\r\n          this.$clearBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $clearBtn);\r\n            } else if (!this.drawer.isEmpty()) {\r\n              if (confirm(`${'Delete the entire drawing'} ?`)) {\r\n                this.drawer.clear();\r\n              }\r\n            }\r\n          });\r\n\r\n          resolve(this.$clearBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Clear button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add text button to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addShapeBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$shapeBtn) {\r\n          const shapeBtn = /*html*/ `<button title=\"${'Draw shape'}\" class=\"btn btn-shape\">${ShapeIcon}</button>`;\r\n\r\n          const shapeMenu = /*html*/ `\r\n            <ul class=\"drawer-menu\">\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"triangle\" class=\"btn triangle\" title=\"${'Triangle'}\">${TriangleIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"rect\" class=\"btn rect\" title=\"${'Rectangle'}\">${RectIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"square\" class=\"btn square\" title=\"${'Square'}\">${SquareIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"line\" class=\"btn line\" title=\"${'Line'}\">${LineIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"arrow\" class=\"btn arrow\" title=\"${'Arrow'}\">${ArrowIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"circle\" class=\"btn circle\" title=\"${'Circle'}\">${CircleIcon}</button>\r\n              </li>\r\n              <li class=\"drawer-menu-item\">\r\n                <button data-shape=\"ellipse\" class=\"btn circle\" title=\"${'Ellipse'}\">${EllipseIcon}</button>\r\n              </li>\r\n            </ul>`;\r\n\r\n          const $shapeMenu = stringToHTMLElement<HTMLUListElement>(shapeMenu);\r\n          const $shapeBtn = stringToHTMLElement<HTMLButtonElement>(shapeBtn);\r\n\r\n          this.$shapeBtn = $shapeBtn;\r\n          this.$shapeMenu = $shapeMenu;\r\n\r\n          this.$toolbar.appendChild(this.$shapeBtn);\r\n          this.drawer.$drawerContainer.appendChild(this.$shapeMenu);\r\n\r\n          this.$shapeBtn.addEventListener('click', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $shapeBtn);\r\n            } else {\r\n              this._toggleMenu($shapeBtn, $shapeMenu);\r\n            }\r\n          });\r\n\r\n          this.$shapeMenu.querySelectorAll('button').forEach(($btn) => {\r\n            $btn.addEventListener('click', () => {\r\n              const shape = $btn.dataset.shape as keyof typeof DrawTools;\r\n              this.drawer.setShape(shape);\r\n            });\r\n          });\r\n\r\n          // Manage click outside menu or button\r\n          this._initClickOutsideMenuEvent($shapeBtn, $shapeMenu);\r\n\r\n          resolve($shapeBtn);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Shape button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add line thickness input range to toolbar if exist\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLInputElement>} HTML input range element\r\n   */\r\n  addLineThicknessBtn(action?: action<HTMLInputElement>): Promise<HTMLInputElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$lineThickness) {\r\n          const lineThickness = /*html*/ `\r\n            <div class=\"drawer-range\">\r\n              <input title=\"${'Thickness'}\" id=\"${\r\n                this.drawer.$canvas.id\r\n              }-line-tickness\" type=\"range\" class=\"\" min=\"1\" value=\"${this.drawer.options.lineThickness}\" max=\"30\" />\r\n              <span class=\"counter\">${this.drawer.options.lineThickness}</span>\r\n            </div>`;\r\n          const $lineThickness = stringToHTMLElement<HTMLDivElement>(lineThickness);\r\n          this.$lineThickness = $lineThickness;\r\n\r\n          this.$toolbar.appendChild(this.$lineThickness);\r\n\r\n          this.$lineThickness.addEventListener(\r\n            'input',\r\n            debounce(() => {\r\n              if (typeof action === 'function') {\r\n                action.call(this, $lineThickness.querySelector('input') as HTMLInputElement);\r\n                return;\r\n              }\r\n\r\n              const lineThickness = parseInt($lineThickness.querySelector('input')?.value as string);\r\n              this.drawer.setLineWidth(lineThickness);\r\n            })\r\n          );\r\n\r\n          resolve(this.$lineThickness.querySelector('input') as HTMLInputElement);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Line tickness button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a colorpicker button\r\n   * see {@link addToolbar} before use it\r\n   * using Coloris, for customisation please see here {@link https://github.com/mdbassit/Coloris}\r\n   * @param {action<HTMLInputElement>?} action Action call after color selected\r\n   * @returns {Promise<HTMLInputElement>}\r\n   */\r\n  addColorPickerBtn(action?: action<HTMLInputElement>): Promise<HTMLInputElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$colorPicker) {\r\n          const colorPickerContainer = /*html*/ `\r\n            <div class=\"container-colorpicker\">\r\n              <input class=\"btn\" id=\"colopicker-${\r\n                this.drawer.options.id\r\n              }\" class=\"\" type=\"text\" title=\"${'Color'}\" value=\"${this.drawer.options.color}\" data-coloris/>\r\n            </div>\r\n            `;\r\n          const $colorPickerContainer = stringToHTMLElement<HTMLDivElement>(colorPickerContainer);\r\n\r\n          this.$toolbar.appendChild($colorPickerContainer);\r\n\r\n          const $colorPicker = $colorPickerContainer.querySelector('input') as HTMLInputElement;\r\n          this.$colorPicker = $colorPicker;\r\n\r\n          if (this.drawer.options.availableColorOnly && !this.drawer.options.availableColor.length) {\r\n            console.warn(`Option 'availableColorOnly' used with an empty 'availableColor' array.`);\r\n          }\r\n\r\n          Coloris.init();\r\n          Coloris({\r\n            el: `#colopicker-${this.drawer.options.id}`,\r\n            theme: 'polaroid',\r\n            swatches: this.drawer.options.availableColor,\r\n            swatchesOnly: this.drawer.options.availableColorOnly,\r\n            formatToggle: !this.drawer.options.availableColorOnly,\r\n            closeButton: true,\r\n          });\r\n\r\n          $colorPicker.addEventListener('change', () => {\r\n            if (typeof action === 'function') {\r\n              action.bind(this, $colorPicker, $colorPicker.value);\r\n            } else {\r\n              this.drawer.setColor($colorPicker.value);\r\n            }\r\n          });\r\n\r\n          resolve(this.$colorPicker);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Colorpicker button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add upload file button\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLInputElement>} HTML input range element\r\n   */\r\n  addUploadFileBtn(action?: action<HTMLInputElement>): Promise<HTMLInputElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.$toolbar && !this.$uploadFile) {\r\n          const uploadFile = /*html*/ `\r\n            <div class=\"container-uploadFile\">\r\n              <input tabindex=\"-1\" id=\"${this.drawer.options.id}-uploadfile\" title=\"${'Color'}\" class=\"\" type=\"file\" />\r\n              <label tabindex=\"0\" title=\"${'Upload file'}\" accept=\"image/png, image/jpeg, .svg\" class=\"btn\" for=\"${\r\n                this.drawer.options.id\r\n              }-uploadfile\">\r\n                ${UploadIcon}\r\n              </label>\r\n            </div>\r\n            `;\r\n          const $uploadFileContainer = stringToHTMLElement<HTMLDivElement>(uploadFile);\r\n\r\n          this.$toolbar.appendChild($uploadFileContainer);\r\n\r\n          const $uploadFile = $uploadFileContainer.querySelector('input') as HTMLInputElement;\r\n          this.$uploadFile = $uploadFile;\r\n\r\n          this.$uploadFile.addEventListener('change', () => {\r\n            if (typeof action === 'function') {\r\n              action.call(this, $uploadFile);\r\n            } else {\r\n              this._uploadFile();\r\n            }\r\n          });\r\n\r\n          resolve(this.$uploadFile);\r\n        } else if (!this.$toolbar) {\r\n          reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n        } else {\r\n          reject(new DrawerError(`Upload file button already added, you cannot add it again.`));\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a download button\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addDownloadBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.$downloadBtn) {\r\n        const download = /*html*/ `<button title=\"${'Download'}\" class=\"btn\">${DownloadIcon}</button>`;\r\n        const $downloadBtn = stringToHTMLElement<HTMLButtonElement>(download);\r\n        this.$downloadBtn = $downloadBtn;\r\n\r\n        this.$toolbar.appendChild(this.$downloadBtn);\r\n\r\n        this.$downloadBtn.addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, $downloadBtn);\r\n          } else {\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n            // const img = await\r\n            canvas.width = this.drawer.options.width;\r\n            canvas.height = this.drawer.options.height;\r\n            ctx.fillStyle = this.drawer.options.bgColor;\r\n            ctx.fillRect(0, 0, this.drawer.options.width, this.drawer.options.height);\r\n            ctx.drawImage(this.drawer.$canvas, 0, 0);\r\n            // Download\r\n            const data = canvas.toDataURL('image/png');\r\n            const $link = document.createElement('a');\r\n\r\n            $link.download = this.drawer.$canvas.id || 'draw' + '.png';\r\n            $link.href = data;\r\n            document.body.appendChild($link);\r\n            $link.click();\r\n            document.body.removeChild($link);\r\n          }\r\n        });\r\n\r\n        resolve(this.$downloadBtn);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n      } else {\r\n        reject(new DrawerError(`Download button already added, you cannot add it again.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add pick color button select color on canvas\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addPickColorButton(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.$pickColorBtn) {\r\n        const pickColor = /*html*/ `<button title=\"${'Pick color'}\" class=\"btn\">${ExpandIcon}</button>`;\r\n        const $pickColorBtn = stringToHTMLElement<HTMLButtonElement>(pickColor);\r\n        this.$pickColorBtn = $pickColorBtn;\r\n\r\n        this.$toolbar.appendChild(this.$pickColorBtn);\r\n\r\n        this.$pickColorBtn.addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, $pickColorBtn);\r\n          } else {\r\n            const hoveredColor = document.getElementById('hovered-color');\r\n            const selectedColor = document.getElementById('selected-color');\r\n\r\n            const pick = (event: PointerEvent, destination: HTMLElement | null) => {\r\n              const bounding = this.drawer.$canvas.getBoundingClientRect();\r\n              const x = event.clientX - bounding.left;\r\n              const y = event.clientY - bounding.top;\r\n              const pixel = this.drawer.ctx.getImageData(x, y, 1, 1);\r\n              const data = pixel.data;\r\n\r\n              const rgba = `rgba(${data[0]}, ${data[1]}, ${data[2]}, ${data[3] / 255})`;\r\n\r\n              if (destination) {\r\n                destination.style.background = rgba;\r\n                destination.textContent = rgba;\r\n              }\r\n\r\n              if (event.type === 'pointerdown') {\r\n                this.drawer.setColor(rgba);\r\n              }\r\n\r\n              return rgba;\r\n            };\r\n\r\n            this.drawer.$canvas.addEventListener('pointermove', (event) => pick(event, hoveredColor));\r\n            this.drawer.$canvas.addEventListener('pointerdown', (event) => pick(event, selectedColor));\r\n          }\r\n        });\r\n\r\n        resolve(this.$pickColorBtn);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n      } else {\r\n        reject(new DrawerError(`Download button already added, you cannot add it again.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add expand button for toggle size to full width / height of window\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addExpandButton(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.$expandBtn) {\r\n        const expand = /*html*/ `<button title=\"${'Expand'}\" class=\"btn\">${ExpandIcon}</button>`;\r\n        const $expandBtn = stringToHTMLElement<HTMLButtonElement>(expand);\r\n        this.$expandBtn = $expandBtn;\r\n\r\n        this.$toolbar.appendChild(this.$expandBtn);\r\n\r\n        this.$expandBtn.addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, $expandBtn);\r\n          } else {\r\n            this.drawer.$drawerContainer.classList.toggle('expanded');\r\n          }\r\n        });\r\n\r\n        resolve(this.$expandBtn);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n      } else {\r\n        reject(new DrawerError(`Download button already added, you cannot add it again.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add fullscreen button for toggle fullscreen native\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addFullscreenButton(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.$fullscreenBtn) {\r\n        const fullscreen = /*html*/ `<button title=\"${'Fullscreen'}\" class=\"btn\">${FullscreenIcon}</button>`;\r\n        const $fullscreenBtn = stringToHTMLElement<HTMLButtonElement>(fullscreen);\r\n        this.$fullscreenBtn = $fullscreenBtn;\r\n\r\n        this.$toolbar.appendChild(this.$fullscreenBtn);\r\n\r\n        this.$fullscreenBtn.addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, $fullscreenBtn);\r\n          } else {\r\n            this._toggleFullScreen(this.drawer.$drawerContainer);\r\n          }\r\n        });\r\n\r\n        resolve(this.$fullscreenBtn);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n      } else {\r\n        reject(new DrawerError(`Download button already added, you cannot add it again.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  async addCloseButton(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement | undefined> {\r\n    if (this.$toolbar && !this.$closeBtn) {\r\n      const close = /*html*/ `<button title=\"${'Close'}\" class=\"btn\">${CloseIcon}</button>`;\r\n      const $closeBtn = stringToHTMLElement<HTMLButtonElement>(close);\r\n      this.$closeBtn = $closeBtn;\r\n\r\n      this.$toolbar.appendChild(this.$closeBtn);\r\n\r\n      this.$closeBtn.addEventListener('click', () => {\r\n        if (typeof action === 'function') {\r\n          action.call(this, $closeBtn);\r\n        } else if (confirm('Do you want to close and lose data ?')) {\r\n          this.drawer.destroy();\r\n        }\r\n      });\r\n      return this.$closeBtn;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a params button\r\n   * see {@link addToolbar} before use it\r\n   * @param {action<HTMLButtonElement>?} action method to call onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addSettingBtn(action?: action<HTMLButtonElement>): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.$settingBtn) {\r\n        const settingBtn = /*html*/ `<button title=\"${'Settings'}\" class=\"btn\">${SettingIcon}</button>`;\r\n        const $settingBtn = stringToHTMLElement<HTMLButtonElement>(settingBtn);\r\n        this.$settingBtn = $settingBtn;\r\n\r\n        this.$toolbar.appendChild(this.$settingBtn);\r\n\r\n        this.$settingBtn.addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, $settingBtn);\r\n          } else if (this.drawer.settingModal.isVisible()) {\r\n            this.drawer.settingModal.hide();\r\n          } else {\r\n            this.drawer.settingModal.show();\r\n          }\r\n        });\r\n\r\n        resolve(this.$settingBtn);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first`));\r\n      } else {\r\n        reject(new DrawerError(`Setting button already added, you cannot add it again.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a custom button to toolbar\r\n   * see {@link addToolbar} before use it\r\n   * @param {String} name Button name (must be unique)\r\n   * @param {String} title Title for button\r\n   * @param {String} label Label or icon\r\n   * @param {action<HTMLButtonElement>} action Action to do onclick\r\n   * @returns {Promise<HTMLButtonElement>}\r\n   */\r\n  addCustomBtn(\r\n    name: string,\r\n    title: string,\r\n    label: string,\r\n    action: action<HTMLButtonElement>\r\n  ): Promise<HTMLButtonElement> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.$toolbar && !this.customBtn[name]) {\r\n        const customBtn = /*html*/ `<button title=\"${title}\" class=\"btn\">${label}</button>`;\r\n        const $customBtn = stringToHTMLElement<HTMLButtonElement>(customBtn);\r\n        this.customBtn[name] = $customBtn;\r\n\r\n        this.$toolbar.appendChild(this.customBtn[name]);\r\n\r\n        this.customBtn[name].addEventListener('click', () => {\r\n          if (typeof action === 'function') {\r\n            action.call(this, this.customBtn[name]);\r\n          } else {\r\n            throw new DrawerError(`No action provided for custom button name '${name}`);\r\n          }\r\n        });\r\n\r\n        resolve(this.customBtn[name]);\r\n      } else if (!this.$toolbar) {\r\n        reject(new DrawerError(`No toolbar provided, please call 'addToolbar' method first.`));\r\n      } else {\r\n        reject(new DrawerError(`Custom button with name \"${name}\" already exist.`));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add separator (ml-auto)\r\n   * @returns {boolean}\r\n   */\r\n  async addSeparator(): Promise<boolean> {\r\n    const separator = /*html*/ `<div class=\"drawer-separator\"></div>`;\r\n    const $separator = stringToHTMLElement<HTMLButtonElement>(separator);\r\n\r\n    this.$toolbar.appendChild($separator);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Apply active state to btn\r\n   * @param {HTMLButtonElement} $btn Button to add active class\r\n   */\r\n  setActiveBtn($btn: HTMLButtonElement) {\r\n    try {\r\n      if (this.$toolbar) {\r\n        this.$toolbar.querySelectorAll('.btn').forEach(($b) => $b.classList.remove('active'));\r\n\r\n        if (this.$drawGroupMenu && this.$drawGroupBtn) {\r\n          this.$drawGroupMenu.querySelectorAll('.btn').forEach(($b) => $b.classList.remove('active'));\r\n          $btn = this.$drawGroupBtn;\r\n          let icon = BrushIcon;\r\n          let title = 'Brush';\r\n\r\n          if (this.drawer.activeTool === 'eraser') {\r\n            icon = EraserIcon;\r\n            title = 'Eraser';\r\n          } else if (this.drawer.activeTool === 'text') {\r\n            icon = TextIcon;\r\n            title = 'Text zone';\r\n          }\r\n\r\n          $btn.innerHTML = icon;\r\n          $btn.title = title;\r\n        }\r\n\r\n        if (this.$shapeMenu) {\r\n          this.$shapeMenu.querySelectorAll('.btn').forEach(($b) => $b.classList.remove('active'));\r\n        }\r\n        $btn?.classList.add('active');\r\n      } else {\r\n        throw new DrawerError(`No toolbar provided`);\r\n      }\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  private _toggleFullScreen($el: HTMLElement) {\r\n    if (!document.fullscreenElement) {\r\n      $el.requestFullscreen();\r\n    } else if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Upload file from input file\r\n   */\r\n  private _uploadFile() {\r\n    if (this.$uploadFile?.files) {\r\n      const file = this.$uploadFile.files[0];\r\n\r\n      if (file) {\r\n        this.drawer.loadFromData(URL.createObjectURL(file));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * Manage undo / redo button state\r\n   */\r\n  _manageUndoRedoBtn() {\r\n    if (!this.drawer.undo_list.length && this.$undoBtn) {\r\n      this.$undoBtn.disabled = true;\r\n    } else if (this.$undoBtn) {\r\n      this.$undoBtn.disabled = false;\r\n    }\r\n\r\n    if (!this.drawer.redo_list.length && this.$redoBtn) {\r\n      this.$redoBtn.disabled = true;\r\n    } else if (this.$redoBtn) {\r\n      this.$redoBtn.disabled = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle show/hide menu\r\n   * @param $btn\r\n   * @param $menu\r\n   * @returns\r\n   */\r\n  private _toggleMenu($btn: HTMLButtonElement, $menu: HTMLUListElement) {\r\n    if ($menu.classList.contains('show')) {\r\n      $menu.classList.remove('show');\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line prefer-const\r\n    let x = $btn.offsetLeft;\r\n    let y = $btn.offsetTop + $btn.offsetHeight;\r\n    const width = $menu.offsetWidth;\r\n    const height = $menu.offsetHeight;\r\n\r\n    if (x + width > window.innerWidth) {\r\n      x = x - (x + width - window.innerWidth) - getScrollbarWidth();\r\n    }\r\n\r\n    if (y + height > window.innerHeight) {\r\n      y = y - height - 5;\r\n    }\r\n\r\n    $menu.style.top = y + 5 + 'px';\r\n\r\n    if (this.options.toolbarPosition === 'innerEnd') {\r\n      $menu.style.left = '';\r\n      $menu.style.right = x + 'px';\r\n    } else {\r\n      $menu.style.left = x + 'px';\r\n    }\r\n    $menu.classList.add('show');\r\n  }\r\n\r\n  /**\r\n   * event for close menu on click outside\r\n   * @param $btn\r\n   * @param $menu\r\n   */\r\n  private _initClickOutsideMenuEvent($btn: HTMLButtonElement, $menu: HTMLUListElement) {\r\n    document.addEventListener(\r\n      'click',\r\n      (event) => {\r\n        if (event.target) {\r\n          const outsideClick = !$btn.contains(event.target as Node) && !$menu.contains(event.target as Node);\r\n\r\n          if (outsideClick) {\r\n            $menu.classList.remove('show');\r\n          }\r\n        }\r\n      },\r\n      false\r\n    );\r\n  }\r\n}\r\n","import './css/drawer.css';\r\nimport { stringToHTMLElement } from './utils/dom';\r\nimport { DrawerError } from './utils/DrawError';\r\nimport { defaultOptionsDrawer } from './constants';\r\nimport { DrawEvent } from './utils/DrawEvent';\r\n\r\n// Type import\r\nimport type { DrawTools, DrawerOptions, Position } from './types/index';\r\n\r\n// History\r\nimport { History } from './utils/History';\r\n\r\n// icons\r\nimport { TriangleIcon } from './icons/triangle';\r\nimport { SquareIcon } from './icons/square';\r\nimport { LineIcon } from './icons/line';\r\nimport { StarIcon } from './icons/star';\r\nimport { CircleIcon } from './icons/circle';\r\nimport { RectIcon } from './icons/rect';\r\nimport { ArrowIcon } from './icons/arrow';\r\n\r\n// Utils\r\nimport { throttle } from './utils/perf';\r\nimport { getMousePosition } from './utils/infos';\r\nimport { deepMerge } from './utils/utils';\r\n\r\n// UI\r\nimport { SettingsModal } from './ui/SettingsModal';\r\n\r\nimport { version } from '../package.json';\r\nimport { Toolbar } from './ui/Toolbar';\r\nimport { EllipseIcon } from './icons/ellipse';\r\n\r\ndeclare global {\r\n  interface HTMLCanvasElement {\r\n    drawer: Drawer;\r\n  }\r\n}\r\n\r\n/**\r\n * @class Drawer\r\n * {@link https://}\r\n *\r\n * Copyright (c) 2023 Winkler Fabien & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Winkler Fabien <fabienwinkler@outlook.fr>\r\n */\r\nexport class Drawer extends History {\r\n  declare ctx: CanvasRenderingContext2D;\r\n  isDrawing: boolean = false;\r\n  activeTool: keyof typeof DrawTools = 'brush';\r\n  dotted: boolean = false;\r\n  // options\r\n  options: DrawerOptions = defaultOptionsDrawer;\r\n  // HTML Elements\r\n  declare $canvas: HTMLCanvasElement;\r\n  $sourceElement: HTMLElement;\r\n  $drawerContainer!: HTMLDivElement;\r\n  #dragStartLocation!: Position;\r\n  #snapshot!: ImageData;\r\n  #availableShape: Array<keyof typeof DrawTools> = [\r\n    'rect',\r\n    'circle',\r\n    'ellipse',\r\n    'square',\r\n    'arrow',\r\n    'line',\r\n    'star',\r\n    'triangle',\r\n    'polygon',\r\n  ];\r\n  settingModal!: SettingsModal;\r\n  gridActive!: boolean;\r\n  VERSION = version;\r\n  toolbar: Toolbar;\r\n  #cloneCanvas!: HTMLCanvasElement;\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLElement} $el Container for drawer\r\n   * @param {Partial<DrawerOptions>} options options for drawer\r\n   */\r\n  constructor($el: HTMLElement, options: Partial<DrawerOptions> = {}) {\r\n    super();\r\n    try {\r\n      if ($el instanceof HTMLElement) {\r\n        this.$sourceElement = $el;\r\n\r\n        // if no width, and container larger than default width\r\n        if (!options.width && $el.offsetWidth > defaultOptionsDrawer.width) {\r\n          options.width = $el.offsetWidth;\r\n        }\r\n        this.options = deepMerge<DrawerOptions>(defaultOptionsDrawer, options);\r\n        this._buildDrawer();\r\n        this.$sourceElement.appendChild(this.$drawerContainer);\r\n        this.setBgColor(this.options.bgColor);\r\n        this._initHandlerEvents();\r\n        this.setCanvas(this.$canvas);\r\n        this._updateCursor();\r\n\r\n        const saved = localStorage.getItem(this.options.localStorageKey);\r\n        let trigger = true;\r\n\r\n        if (saved && !this.isEmpty(saved)) {\r\n          const data = JSON.parse(saved);\r\n          this.loadFromData(data.data, false);\r\n          this.setBgColor(data.bgcolor, false);\r\n          this.options.grid = data.grid;\r\n          trigger = false;\r\n        }\r\n\r\n        if (this.options.grid) {\r\n          this.addGrid(trigger);\r\n        }\r\n\r\n        this.$canvas.drawer = this;\r\n        this.toolbar = new Toolbar(this, { toolbarPosition: this.options.toolbarPosition });\r\n\r\n        if (this.options.defaultToolbar) {\r\n          this.toolbar.addToolbar();\r\n          this.toolbar.addDefaults();\r\n        }\r\n\r\n        this.settingModal = new SettingsModal(this);\r\n\r\n        if (this.options.dotted) {\r\n          this.setDottedLine(true, this.options.dash);\r\n        }\r\n\r\n        this.setTool(this.options.tool);\r\n\r\n        // dispatch drawer.init event\r\n        this.$sourceElement.dispatchEvent(DrawEvent('init', this));\r\n      } else {\r\n        throw new DrawerError(`element must be an instance of HTMLElement`);\r\n      }\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw html drawer\r\n   */\r\n  private _buildDrawer() {\r\n    try {\r\n      this.$drawerContainer = stringToHTMLElement<HTMLDivElement>(/*html*/ `<div class=\"drawer-container\"></div>`);\r\n      const canvas = /*html*/ `\r\n      <canvas tabindex=\"0\" id=\"${this.options.id}\" height=\"${this.options.canvasHeight}\" width=\"${this.options.canvasWidth}\" class=\"canvas-drawer\"></canvas>\r\n      `;\r\n      this.$canvas = stringToHTMLElement<HTMLCanvasElement>(canvas);\r\n      this.#cloneCanvas = this.$canvas.cloneNode() as HTMLCanvasElement;\r\n      this.ctx = this.$canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n      this.ctx.globalAlpha = this.options.opacity;\r\n      this.ctx.imageSmoothingEnabled = false;\r\n      this.$drawerContainer.style.width = this.options.width + 'px';\r\n      this.$drawerContainer.style.height = this.options.height + 'px';\r\n      this.$drawerContainer.appendChild(this.$canvas);\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.clear();\r\n    this.$drawerContainer.remove();\r\n  }\r\n\r\n  /**\r\n   * Set size of container\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async setSize(width: number, height: number): Promise<boolean> {\r\n    this.$drawerContainer.style.width = width + 'px';\r\n    this.$drawerContainer.style.height = height + 'px';\r\n\r\n    this.$canvas.dispatchEvent(DrawEvent('update.size', { setSize: { w: width, h: height } }));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Set canvas sizing - / ! \\ Careful; this method change ur current drawing !!! / ! \\\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setCanvasSize(width: number, height: number): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const isEmpty = this.isEmpty();\r\n        const data = this.getData();\r\n        this.$canvas.width = width;\r\n        this.$canvas.height = height;\r\n\r\n        // Apply data if not empty for prevent error\r\n        if (!isEmpty) this.loadFromData(data);\r\n\r\n        if (this.toolbar.$toolbar) {\r\n          this.toolbar.$toolbar.style.maxWidth = this.$canvas.width + 'px';\r\n          this.toolbar.$toolbar.style.maxHeight = this.$canvas.height + 'px';\r\n        }\r\n\r\n        this.$canvas.dispatchEvent(DrawEvent('update.canvasSize', { setSize: { w: width, h: height } }));\r\n\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if canvas empty\r\n   * @returns {boolean}\r\n   */\r\n  isEmpty(data?: string): boolean {\r\n    data = data ?? this.getData();\r\n    return this.#cloneCanvas.toDataURL() === data;\r\n  }\r\n\r\n  /**\r\n   * Change drawing color\r\n   * @param {String} color Color to apply to draw\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setColor(color: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.options.color = color;\r\n        this.ctx.strokeStyle = this.options.color; // passing selectedColor as stroke style\r\n        this.ctx.fillStyle = this.options.color; // passing selectedColor as fill style\r\n\r\n        if (this.toolbar.$colorPicker) {\r\n          this.toolbar.$colorPicker.value = color;\r\n          // for update coloris component\r\n          this.toolbar.$colorPicker.dispatchEvent(new Event('input', { bubbles: true }));\r\n        }\r\n        this.$canvas.dispatchEvent(DrawEvent('update.color', { color }));\r\n\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change CSS canvas background color\r\n   * @param bgColor canvas css background color\r\n   * @param {Boolean} triggerChange Trigger change event\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setBgColor(bgColor: string, triggerChange: boolean = true): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.options.bgColor = bgColor;\r\n        this.$canvas.style.backgroundColor = bgColor;\r\n\r\n        this.$canvas.dispatchEvent(DrawEvent('update.bgColor', { bgColor }));\r\n        if (triggerChange) this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change canvas background color\r\n   * @param bgColor canvas css background color\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setCanvasBgColor(bgColor: string): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.options.bgColor = bgColor;\r\n        this.ctx.fillStyle = bgColor;\r\n        this.ctx.fillRect(0, 0, this.$canvas.width, this.$canvas.height);\r\n\r\n        this.$canvas.dispatchEvent(DrawEvent('update.canvas.bgColor', { bgColor }));\r\n        this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * set active tool\r\n   * @param {keyof typeof DrawTools} toolName Tool name to set\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setTool(toolName: keyof typeof DrawTools): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.activeTool = toolName;\r\n\r\n        if (this.toolbar.$toolbar) {\r\n          let $btn: HTMLButtonElement | null = null;\r\n          switch (toolName) {\r\n            case 'brush':\r\n              if (this.toolbar.$brushBtn) $btn = this.toolbar.$brushBtn;\r\n              break;\r\n            case 'text':\r\n              if (this.toolbar.$textBtn) $btn = this.toolbar.$textBtn;\r\n              break;\r\n            case 'eraser':\r\n              if (this.toolbar.$eraserBtn) $btn = this.toolbar.$eraserBtn;\r\n              if (this.toolbar.$drawGroupMenu) $btn = this.toolbar.$drawGroupMenu.querySelector('[data-tool=eraser]');\r\n              break;\r\n            case 'square':\r\n            case 'star':\r\n            case 'arrow':\r\n            case 'circle':\r\n            case 'ellipse':\r\n            case 'line':\r\n            case 'rect':\r\n            case 'triangle':\r\n              if (this.toolbar.$shapeBtn) $btn = this.toolbar.$shapeBtn;\r\n              break;\r\n          }\r\n\r\n          if ($btn) this.toolbar.setActiveBtn($btn);\r\n          this.$canvas.dispatchEvent(DrawEvent('update.tool', { toolName }));\r\n          resolve(true);\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear all canvas\r\n   *\r\n   * @returns {Promise<HTMLCanvasElement>}\r\n   */\r\n  clear(): Promise<HTMLCanvasElement> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // Conserve current bgcolor ?\r\n        // this.ctx.fillStyle = this.options.bgColor;\r\n        // this.ctx.fillRect(0, 0, this.$canvas.width, this.$canvas.height);\r\n        this.ctx.clearRect(0, 0, this.$canvas.width, this.$canvas.height);\r\n        this.options.bgColor = defaultOptionsDrawer.bgColor;\r\n        this.redo_list = [];\r\n        this.undo_list = [];\r\n        this.gridActive = false;\r\n        this.toolbar._manageUndoRedoBtn();\r\n        this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n\r\n        // After event, else save event triggered\r\n        const saved = localStorage.getItem(this.options.localStorageKey);\r\n        if (saved) {\r\n          localStorage.removeItem(this.options.localStorageKey);\r\n        }\r\n        resolve(this.$canvas);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Inject data to canvas\r\n   * @param data\r\n   * @param {Boolean} triggerChange Trigger change event\r\n   * @returns {Promise<Drawer>}\r\n   */\r\n  loadFromData(data: string, triggerChange: boolean = true): Promise<Drawer> {\r\n    return new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const hRatio = this.$canvas.width / img.width;\r\n        const vRatio = this.$canvas.height / img.height;\r\n        const ratio = Math.min(hRatio, vRatio);\r\n        const centerShift_x = (this.$canvas.width - img.width * ratio) / 2;\r\n        const centerShift_y = (this.$canvas.height - img.height * ratio) / 2;\r\n        this.ctx.clearRect(0, 0, this.$canvas.width, this.$canvas.height);\r\n        this.ctx.drawImage(\r\n          img,\r\n          0,\r\n          0,\r\n          img.width,\r\n          img.height,\r\n          centerShift_x,\r\n          centerShift_y,\r\n          img.width * ratio,\r\n          img.height * ratio\r\n        );\r\n\r\n        if (triggerChange) this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n        resolve(this);\r\n      };\r\n      img.onerror = () => {\r\n        reject(new DrawerError(`Error during loading img with src : \"${data}\"`));\r\n      };\r\n      img.src = data;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save draw to localStorage\r\n   * {@link DrawerOptions.localStorageKey}\r\n   */\r\n  saveDraw() {\r\n    try {\r\n      if (this.options.localStorageKey) {\r\n        localStorage.setItem(\r\n          this.options.localStorageKey,\r\n          JSON.stringify({ data: this.getData(), bgcolor: this.options.bgColor, grid: this.options.grid })\r\n        );\r\n      } else {\r\n        throw new DrawerError(`Error saving draw, options 'localStorageKey' is wrong.`);\r\n      }\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get date url from canvas\r\n   * @returns {string} canvas png data\r\n   */\r\n  getData(): string {\r\n    return this.$canvas.toDataURL('image/png');\r\n  }\r\n\r\n  async getImage(): Promise<HTMLImageElement> {\r\n    const img = new Image();\r\n\r\n    img.src = this.getData();\r\n\r\n    await img.decode();\r\n\r\n    return img;\r\n  }\r\n\r\n  /**\r\n   * Change drawing shape\r\n   * @param {keyof typeof DrawTools} shape\r\n   */\r\n  setShape(shape: keyof typeof DrawTools): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (this.toolbar.$shapeBtn) {\r\n          let icon = '';\r\n\r\n          switch (shape) {\r\n            case 'line':\r\n              icon = LineIcon;\r\n              break;\r\n            case 'square':\r\n              icon = SquareIcon;\r\n              break;\r\n            case 'rect':\r\n              icon = RectIcon;\r\n              break;\r\n            case 'star':\r\n              icon = StarIcon;\r\n              break;\r\n            case 'triangle':\r\n              icon = TriangleIcon;\r\n              break;\r\n            case 'circle':\r\n              icon = CircleIcon;\r\n              break;\r\n            case 'ellipse':\r\n              icon = EllipseIcon;\r\n              break;\r\n            case 'arrow':\r\n              icon = ArrowIcon;\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          this.toolbar.$shapeBtn.innerHTML = icon;\r\n          this.toolbar.$shapeMenu?.classList.remove('show');\r\n          this.setTool(shape);\r\n          this.$canvas.dispatchEvent(DrawEvent('update.shape', { shape }));\r\n          resolve(true);\r\n        }\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set line style dotted\r\n   * @param {Boolean} active state\r\n   * @param {number[]} [dash=[10, 5]] Line dash format [width, spacing]\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  setDottedLine(active: boolean, dash: number[] = [10, 5]): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.options.dash = dash;\r\n\r\n        if (!active) {\r\n          this.ctx.setLineDash([]);\r\n        } else {\r\n          this.ctx.setLineDash(dash);\r\n        }\r\n        this.dotted = active;\r\n        this.$canvas.dispatchEvent(DrawEvent('update.dotted', { dotted: active, dash }));\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the line width\r\n   * @param {number} width Line width\r\n   */\r\n  setLineWidth(width: number) {\r\n    try {\r\n      this.options.lineThickness = width;\r\n      this.options.eraserThickness =\r\n        width > this.options.minEraserThickness ? width * 2 : this.options.minEraserThickness;\r\n      this.ctx.lineWidth = width;\r\n\r\n      if (this.toolbar.$lineThickness) {\r\n        const $counter = this.toolbar.$lineThickness.querySelector('.counter');\r\n        if ($counter) {\r\n          $counter.innerHTML = String(this.options.lineThickness);\r\n        }\r\n      }\r\n\r\n      this.$canvas.dispatchEvent(DrawEvent('update.lineThickness', { lineThickness: width }));\r\n    } catch (error: any) {\r\n      throw new DrawerError(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if active tool is shape\r\n   * @returns {Boolean}\r\n   */\r\n  isShape(): boolean {\r\n    return this.#availableShape.includes(this.activeTool);\r\n  }\r\n\r\n  /**\r\n   * Start drawing (mousedown)\r\n   * @param {PointerEvent} event\r\n   * @returns\r\n   */\r\n  private _startDraw(event: PointerEvent) {\r\n    if (event.button === 2) return;\r\n    if (this.activeTool === 'text') return;\r\n    this.#dragStartLocation = getMousePosition(this.$canvas, event);\r\n    this.ctx.beginPath();\r\n    this.isDrawing = true;\r\n    this._takeSnapshot();\r\n    this.saveState();\r\n\r\n    if (this.activeTool !== 'brush' && this.activeTool !== 'eraser' && this.options.guides) {\r\n      const position = getMousePosition(this.$canvas, event);\r\n      this._drawGuides(position);\r\n      this._drawPointerDownArc(position);\r\n    }\r\n  }\r\n  /**\r\n   * @private _drawing\r\n   * @param {PointerEvent} event\r\n   * @returns\r\n   */\r\n  private _drawing(event: PointerEvent) {\r\n    if (event.buttons !== 1 || this.activeTool === 'text') return; // if isDrawing is false return from here\r\n\r\n    if (this.activeTool !== 'eraser') {\r\n      this.ctx.globalCompositeOperation = this.settingModal.xor ? 'xor' : 'source-over';\r\n    } else if (this.activeTool === 'eraser') {\r\n      this.ctx.globalCompositeOperation = 'destination-out';\r\n    } else {\r\n      throw new DrawerError(`unknown active draw tool \"${this.activeTool}\"`);\r\n    }\r\n\r\n    if (this.isShape()) {\r\n      this._restoreSnapshot();\r\n    }\r\n    const position = getMousePosition(this.$canvas, event);\r\n\r\n    if (this.activeTool !== 'brush' && this.activeTool !== 'eraser' && this.options.guides) {\r\n      this._drawGuides(position);\r\n      this._drawPointerDownArc(this.#dragStartLocation);\r\n      this._drawRubberBandReference(position);\r\n    }\r\n\r\n    this._draw(position);\r\n  }\r\n\r\n  /**\r\n   * @private _drawend\r\n   * trigger when draw ended\r\n   * @param {PointerEvent} event\r\n   */\r\n  private _drawend(event: PointerEvent) {\r\n    if (event.pointerType !== 'mouse' || event.button === 0) {\r\n      if (this.isShape()) {\r\n        this._restoreSnapshot();\r\n      }\r\n      const position =\r\n        this.activeTool === 'text' ? { x: event.clientX, y: event.clientY } : getMousePosition(this.$canvas, event);\r\n\r\n      this.toolbar._manageUndoRedoBtn();\r\n      this._draw(position);\r\n      this.isDrawing = false;\r\n      this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n    }\r\n  }\r\n\r\n  private _takeSnapshot() {\r\n    this.#snapshot = this.ctx.getImageData(0, 0, this.$canvas.width, this.$canvas.height);\r\n  }\r\n\r\n  private _restoreSnapshot() {\r\n    this.ctx.putImageData(this.#snapshot, 0, 0);\r\n  }\r\n\r\n  private _draw(position: Position) {\r\n    this.ctx.lineWidth = this.activeTool === 'eraser' ? this.options.eraserThickness : this.options.lineThickness; // passing brushSize as line width\r\n    this.ctx.strokeStyle = this.options.color; // passing selectedColor as stroke style\r\n    this.ctx.fillStyle = this.options.color; // passing selectedColor as fill style\r\n    this.ctx.lineCap = this.options.cap;\r\n    const angle =\r\n      (Math.atan2(this.#dragStartLocation.y - position.y, this.#dragStartLocation.x - position.x) * 20) / Math.PI;\r\n\r\n    switch (this.activeTool) {\r\n      case 'brush':\r\n      case 'eraser':\r\n        this._drawHand(position);\r\n        break;\r\n      case 'text':\r\n        this._addTextArea(position);\r\n        break;\r\n      case 'line':\r\n        this._drawLine(position);\r\n        break;\r\n      case 'rect':\r\n        this._drawRect(position);\r\n        break;\r\n      case 'square':\r\n        this._drawPolygon(position, 4, Math.PI / 4);\r\n        break;\r\n      case 'triangle':\r\n        this._drawPolygon(position, 3, (angle * Math.PI) / 4);\r\n        break;\r\n      case 'arrow':\r\n        this._drawArrow(position);\r\n        break;\r\n      case 'polygon':\r\n        this._drawPolygon(position, 5, angle * (Math.PI / 180));\r\n        break;\r\n      case 'circle':\r\n        this._drawCircle(position);\r\n        break;\r\n      case 'ellipse':\r\n        this._drawEllipse(position);\r\n        break;\r\n      case 'star':\r\n        console.log('Not implemented');\r\n        break;\r\n    }\r\n\r\n    if (\r\n      this.options.fill &&\r\n      this.activeTool !== 'eraser' &&\r\n      this.activeTool !== 'brush' &&\r\n      this.activeTool !== 'text'\r\n    ) {\r\n      this.ctx.fill();\r\n    } else {\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  private _drawHand({ x, y }: Position) {\r\n    this.ctx.lineTo(x, y);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  private _drawLine({ x, y }: Position) {\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(this.#dragStartLocation.x, this.#dragStartLocation.y);\r\n    this.ctx.lineTo(x, y);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  private _drawRect({ x, y }: Position) {\r\n    const w = x - this.#dragStartLocation.x;\r\n    const h = y - this.#dragStartLocation.y;\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(this.#dragStartLocation.x, this.#dragStartLocation.y, w, h);\r\n  }\r\n\r\n  private _drawCircle({ x, y }: Position) {\r\n    const radius = Math.sqrt(Math.pow(this.#dragStartLocation.x - x, 2) + Math.pow(this.#dragStartLocation.y - y, 2));\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(this.#dragStartLocation.x, this.#dragStartLocation.y, radius, 0, 2 * Math.PI);\r\n  }\r\n\r\n  private _drawArrow({ x, y }: Position) {\r\n    const angle = Math.atan2(y - this.#dragStartLocation.y, x - this.#dragStartLocation.x);\r\n    const hyp = Math.sqrt(\r\n      (x - this.#dragStartLocation.x) * (x - this.#dragStartLocation.x) +\r\n        (y - this.#dragStartLocation.y) * (y - this.#dragStartLocation.y)\r\n    );\r\n\r\n    this.ctx.save();\r\n    this.ctx.translate(this.#dragStartLocation.x, this.#dragStartLocation.y);\r\n    this.ctx.rotate(angle);\r\n\r\n    // line\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(0, 0);\r\n    this.ctx.lineTo(hyp - this.options.lineThickness, 0);\r\n    this.ctx.stroke();\r\n\r\n    // triangle\r\n    let triangleWidth = this.options.lineThickness;\r\n    // Min size, less of 5 is not visible\r\n    if (triangleWidth < 5) {\r\n      triangleWidth = 5;\r\n    }\r\n    this.ctx.beginPath();\r\n    this.ctx.lineTo(hyp - triangleWidth, triangleWidth);\r\n    this.ctx.lineTo(hyp, 0);\r\n    this.ctx.lineTo(hyp - triangleWidth, -triangleWidth);\r\n    this.ctx.fill();\r\n\r\n    this.ctx.restore();\r\n  }\r\n\r\n  private _drawEllipse({ x, y }: Position) {\r\n    const w = x - this.#dragStartLocation.x;\r\n    const h = y - this.#dragStartLocation.y;\r\n    const angle = Math.atan2(y - 100, x - 100);\r\n    this.ctx.beginPath();\r\n\r\n    this.ctx.ellipse(\r\n      this.#dragStartLocation.x,\r\n      this.#dragStartLocation.y,\r\n      Math.abs(w),\r\n      Math.abs(h),\r\n      angle,\r\n      0,\r\n      2 * Math.PI\r\n    );\r\n  }\r\n\r\n  // private _drawStar(centerX: number, centerY: number, points: number, outer: number, inner: number) {\r\n  //   // define the star\r\n  //   this.ctx.beginPath();\r\n  //   this.ctx.moveTo(centerX, centerY + outer);\r\n  //   for (let i = 0; i < 2 * points + 1; i++) {\r\n  //     const r = i % 2 == 0 ? outer : inner;\r\n  //     const a = (Math.PI * i) / points;\r\n  //     this.ctx.lineTo(centerX + r * Math.sin(a), centerY + r * Math.cos(a));\r\n  //   }\r\n  //   this.ctx.closePath();\r\n  //   // draw\r\n  //   this.ctx.fill();\r\n  //   this.ctx.stroke();\r\n  // }\r\n\r\n  private _drawPolygon({ x, y }: Position, sides: number, angle: number) {\r\n    const coordinates = [],\r\n      radius = Math.sqrt(Math.pow(this.#dragStartLocation.x - x, 2) + Math.pow(this.#dragStartLocation.y - y, 2));\r\n\r\n    for (let index = 0; index < sides; index++) {\r\n      coordinates.push({\r\n        x: this.#dragStartLocation.x + radius * Math.cos(angle),\r\n        y: this.#dragStartLocation.y - radius * Math.sin(angle),\r\n      });\r\n      angle += (2 * Math.PI) / sides;\r\n    }\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(coordinates[0].x, coordinates[0].y);\r\n\r\n    for (let index = 0; index < sides; index++) {\r\n      this.ctx.lineTo(coordinates[index].x, coordinates[index].y);\r\n    }\r\n\r\n    this.ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * Add a grid for draw helping\r\n   * @param {Boolean} triggerChange Trigger change event (for prevent auto saving for example)\r\n   */\r\n  addGrid(triggerChange: boolean = true) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.options.grid = true;\r\n        this.$canvas.classList.add('grid');\r\n        if (triggerChange) this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n        resolve(true);\r\n      } catch (error: any) {\r\n        reject(new DrawerError(error.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove grid for draw helping\r\n   */\r\n  removeGrid() {\r\n    this.options.grid = false;\r\n    this.$canvas.classList.remove('grid');\r\n    this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n  }\r\n\r\n  /**\r\n   * Add a guide when drawing for draw helping\r\n   */\r\n  private _drawGuides({ x, y }: Position) {\r\n    this.ctx.save();\r\n    this.ctx.strokeStyle = 'rgba(255, 26, 121, 0.8)';\r\n    this.ctx.lineWidth = 1;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(0, y);\r\n    this.ctx.lineTo(this.ctx.canvas.width, y);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(x, 0);\r\n    this.ctx.lineTo(x, this.ctx.canvas.height);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Draw start point references\r\n   */\r\n  private _drawPointerDownArc({ x, y }: Position) {\r\n    this.ctx.save();\r\n    this.ctx.fillStyle = 'rgba(255,0,0,0.5)';\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, 10, 0, Math.PI * 2);\r\n    this.ctx.fill();\r\n  }\r\n\r\n  /**\r\n   * Draw x/y point references\r\n   * @param param0\r\n   */\r\n  private _drawRubberBandReference({ x, y }: Position) {\r\n    const rubberBandRect: any = {};\r\n    if (this.#dragStartLocation.x < x) {\r\n      rubberBandRect.left = this.#dragStartLocation.x;\r\n    } else {\r\n      rubberBandRect.left = x;\r\n    }\r\n\r\n    if (this.#dragStartLocation.y < y) {\r\n      rubberBandRect.top = this.#dragStartLocation.y;\r\n    } else {\r\n      rubberBandRect.top = y;\r\n    }\r\n\r\n    rubberBandRect.width = Math.abs(this.#dragStartLocation.x - x);\r\n    rubberBandRect.height = Math.abs(this.#dragStartLocation.y - y);\r\n    this.ctx.save();\r\n    this.ctx.strokeStyle = 'black';\r\n    this.ctx.lineWidth = 1;\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(rubberBandRect.left, rubberBandRect.top, 4, 0, Math.PI * 2);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(rubberBandRect.left + rubberBandRect.width, rubberBandRect.top, 4, 0, Math.PI * 2);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(rubberBandRect.left, rubberBandRect.top + rubberBandRect.height, 4, 0, Math.PI * 2);\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(\r\n      rubberBandRect.left + rubberBandRect.width,\r\n      rubberBandRect.top + rubberBandRect.height,\r\n      4,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n\r\n    this.ctx.restore();\r\n  }\r\n\r\n  /**\r\n   * Update cursor style\r\n   */\r\n  private _updateCursor() {\r\n    const eraserThickness =\r\n      this.options.eraserThickness > this.options.minEraserThickness\r\n        ? this.options.eraserThickness\r\n        : this.options.minEraserThickness;\r\n    const rad = this.activeTool === 'eraser' ? eraserThickness : this.options.lineThickness;\r\n    const cursorCanvas = document.createElement('canvas');\r\n    const ctx = cursorCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n    cursorCanvas.width = cursorCanvas.height = rad;\r\n\r\n    ctx.lineCap = this.options.cap;\r\n    ctx.fillStyle = 'transparent';\r\n    ctx.fillRect(0, 0, this.$canvas.width, this.$canvas.height);\r\n\r\n    if (this.options.cap === 'round') {\r\n      ctx.arc(rad / 2, rad / 2, (rad / 2) * 0.9, 0, Math.PI * 2, false);\r\n    } else {\r\n      ctx.rect(0, 0, rad, rad);\r\n    }\r\n\r\n    if (this.activeTool === 'brush') {\r\n      ctx.fillStyle = this.options.color;\r\n      ctx.fill();\r\n    } else if (this.activeTool === 'eraser') {\r\n      ctx.strokeStyle = this.options.color;\r\n      ctx.stroke();\r\n    } else if (this.isShape()) {\r\n      this.$canvas.style.cursor = 'crosshair';\r\n      return;\r\n    } else {\r\n      // Text\r\n      this.$canvas.style.cursor = `text`;\r\n      return;\r\n    }\r\n\r\n    cursorCanvas.toBlob((blob) => {\r\n      if (blob) {\r\n        URL.revokeObjectURL(this.$canvas.style.cursor);\r\n        const cursorURL = URL.createObjectURL(blob);\r\n        this.$canvas.style.cursor = `url(${cursorURL}) ${rad / 2} ${rad / 2}, auto`;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private Initialize all event listener\r\n   */\r\n  private _initHandlerEvents() {\r\n    this._startDraw = throttle(this._startDraw, 10);\r\n    this._drawing = throttle(this._drawing, 10);\r\n    this._drawend = throttle(this._drawend, 10);\r\n\r\n    this.$canvas.addEventListener('pointerdown', this._startDraw.bind(this), false);\r\n    this.$canvas.addEventListener('pointermove', this._drawing.bind(this), false);\r\n    this.$canvas.addEventListener('pointerup', this._drawend.bind(this), false);\r\n\r\n    this.$canvas.addEventListener('drawer.update.color', this._updateCursor.bind(this));\r\n    this.$canvas.addEventListener('drawer.update.lineThickness', this._updateCursor.bind(this));\r\n    this.$canvas.addEventListener('drawer.update.tool', this._updateCursor.bind(this));\r\n\r\n    this.$canvas.addEventListener('keypress', (event: KeyboardEvent) => {\r\n      if (event.ctrlKey) {\r\n        if (event.code === 'KeyW') {\r\n          this.undo().then(() => {\r\n            this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n          });\r\n        } else if (event.code === 'KeyY') {\r\n          this.redo().then(() => {\r\n            this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n          });\r\n        }\r\n        this.toolbar._manageUndoRedoBtn();\r\n      }\r\n    });\r\n\r\n    if (this.options.autoSave) {\r\n      this.$canvas.addEventListener('drawer.change', this.saveDraw.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adding textarea to clicked zone\r\n   * @param {Position} position\r\n   */\r\n  private _addTextArea({ x, y }: Position) {\r\n    this.ctx.globalCompositeOperation = 'source-over';\r\n    const $textArea = document.createElement('textarea');\r\n    const fontSize = this.options.lineThickness < 12 ? 12 : this.options.lineThickness;\r\n\r\n    $textArea.style.position = 'fixed';\r\n    $textArea.style.left = x + 'px';\r\n    $textArea.style.top = y + 'px';\r\n    $textArea.style.color = this.options.color;\r\n    $textArea.style.height = 'auto';\r\n    $textArea.style.width = 'auto';\r\n    $textArea.style.fontSize = fontSize + 'px';\r\n    $textArea.style.fontFamily = 'sans-serif';\r\n\r\n    $textArea.addEventListener('focusout', () => {\r\n      this.saveState();\r\n      const value = $textArea.value;\r\n\r\n      if (value) {\r\n        this.ctx.textBaseline = 'top';\r\n        this.ctx.textAlign = 'left';\r\n        this.ctx.font = fontSize + 'px sans-serif';\r\n        const lineHeight = this.ctx.measureText('Mi').width;\r\n        const lines = $textArea.value.split('\\n');\r\n\r\n        const x = parseInt($textArea.style.left, 10) - this.$canvas.getBoundingClientRect().left;\r\n        let y = parseInt($textArea.style.top, 10) - this.$canvas.getBoundingClientRect().top;\r\n        this.ctx.fillStyle = this.options.color;\r\n        for (const line of lines) {\r\n          this.ctx.fillText(line, x, y);\r\n          y += lineHeight;\r\n        }\r\n      }\r\n      $textArea.remove();\r\n      this.$canvas.dispatchEvent(DrawEvent('change', this));\r\n    });\r\n\r\n    this.$drawerContainer.appendChild($textArea);\r\n\r\n    $textArea.focus();\r\n  }\r\n}\r\n"],"names":["window","document","Math","undefined","_loop","_loop2","option","Coloris","_loop3","key","drawer","lineThickness","x","y"],"mappings":"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","x_google_ignoreList":[15]}